$date
	Tue Dec 10 15:23:44 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_encoder $end
$var wire 16 ! a2 [15:0] $end
$var wire 16 " a1 [15:0] $end
$var parameter 32 # N $end
$var parameter 32 $ WIDTH $end
$var reg 1 % clk $end
$var reg 9 & in [8:0] $end
$var reg 1 ' rst $end
$scope module en $end
$var wire 1 % clk $end
$var wire 9 ( in [8:0] $end
$var wire 1 ' rst $end
$var wire 4 ) nextState [3:0] $end
$var wire 16 * in_wd2_mult_9 [15:0] $end
$var wire 16 + in_wd2_mult_8 [15:0] $end
$var wire 16 , in_wd2_mult_7 [15:0] $end
$var wire 16 - in_wd2_mult_6 [15:0] $end
$var wire 16 . in_wd2_mult_5 [15:0] $end
$var wire 16 / in_wd2_mult_4 [15:0] $end
$var wire 16 0 in_wd2_mult_3 [15:0] $end
$var wire 16 1 in_wd2_mult_2 [15:0] $end
$var wire 16 2 in_wd2_mult_1 [15:0] $end
$var wire 16 3 in_wd1_mult_9 [15:0] $end
$var wire 16 4 in_wd1_mult_8 [15:0] $end
$var wire 16 5 in_wd1_mult_7 [15:0] $end
$var wire 16 6 in_wd1_mult_6 [15:0] $end
$var wire 16 7 in_wd1_mult_5 [15:0] $end
$var wire 16 8 in_wd1_mult_4 [15:0] $end
$var wire 16 9 in_wd1_mult_3 [15:0] $end
$var wire 16 : in_wd1_mult_2 [15:0] $end
$var wire 16 ; in_wd1_mult_1 [15:0] $end
$var wire 16 < in_wc2_mult_9 [15:0] $end
$var wire 16 = in_wc2_mult_8 [15:0] $end
$var wire 16 > in_wc2_mult_7 [15:0] $end
$var wire 16 ? in_wc2_mult_6 [15:0] $end
$var wire 16 @ in_wc2_mult_5 [15:0] $end
$var wire 16 A in_wc2_mult_4 [15:0] $end
$var wire 16 B in_wc2_mult_3 [15:0] $end
$var wire 16 C in_wc2_mult_2 [15:0] $end
$var wire 16 D in_wc2_mult_1 [15:0] $end
$var wire 16 E in_wc1_mult_9 [15:0] $end
$var wire 16 F in_wc1_mult_8 [15:0] $end
$var wire 16 G in_wc1_mult_7 [15:0] $end
$var wire 16 H in_wc1_mult_6 [15:0] $end
$var wire 16 I in_wc1_mult_5 [15:0] $end
$var wire 16 J in_wc1_mult_4 [15:0] $end
$var wire 16 K in_wc1_mult_3 [15:0] $end
$var wire 16 L in_wc1_mult_2 [15:0] $end
$var wire 16 M in_wc1_mult_1 [15:0] $end
$var wire 16 N in_pad_9 [15:0] $end
$var wire 16 O in_pad_8 [15:0] $end
$var wire 16 P in_pad_7 [15:0] $end
$var wire 16 Q in_pad_6 [15:0] $end
$var wire 16 R in_pad_5 [15:0] $end
$var wire 16 S in_pad_4 [15:0] $end
$var wire 16 T in_pad_3 [15:0] $end
$var wire 16 U in_pad_2 [15:0] $end
$var wire 16 V in_pad_1 [15:0] $end
$var wire 1 W en_sqrt $end
$var wire 1 X en_softplus $end
$var wire 1 Y en_mult_in $end
$var wire 1 Z en_mult_a2 $end
$var wire 1 [ en_mult_a1 $end
$var wire 16 \ d2_temp [15:0] $end
$var wire 16 ] d2 [15:0] $end
$var wire 16 ^ d1_temp [15:0] $end
$var wire 16 _ d1 [15:0] $end
$var wire 16 ` c2_temp [15:0] $end
$var wire 16 a c2 [15:0] $end
$var wire 16 b c1_temp [15:0] $end
$var wire 16 c c1 [15:0] $end
$var wire 1 d busy_sqrt_2 $end
$var wire 1 e busy_sqrt_1 $end
$var wire 1 f busy_mult_in_4 $end
$var wire 1 g busy_mult_in_3 $end
$var wire 1 h busy_mult_in_2 $end
$var wire 1 i busy_mult_in_1 $end
$var wire 1 j busy_mult_a2 $end
$var wire 1 k busy_mult_a1 $end
$var wire 16 l ad2_sqrt [15:0] $end
$var wire 16 m ad2 [15:0] $end
$var wire 16 n ad1_sqrt [15:0] $end
$var wire 16 o ad1 [15:0] $end
$var wire 16 p a2_mult [15:0] $end
$var wire 16 q a2 [15:0] $end
$var wire 16 r a1_mult [15:0] $end
$var wire 16 s a1 [15:0] $end
$var parameter 16 t BIAS_MEAN_1 $end
$var parameter 16 u BIAS_MEAN_2 $end
$var parameter 16 v BIAS_VAR_1 $end
$var parameter 16 w BIAS_VAR_2 $end
$var parameter 16 x EPS_1 $end
$var parameter 16 y EPS_2 $end
$var parameter 32 z N_IN $end
$var parameter 4 { STATE_0 $end
$var parameter 4 | STATE_1 $end
$var parameter 4 } STATE_2 $end
$var parameter 4 ~ STATE_3 $end
$var parameter 4 !" STATE_4 $end
$var parameter 4 "" STATE_5 $end
$var parameter 4 #" STATE_6 $end
$var parameter 4 $" STATE_7 $end
$var parameter 4 %" STATE_8 $end
$var parameter 16 &" WEIGHT_MEAN_11 $end
$var parameter 16 '" WEIGHT_MEAN_12 $end
$var parameter 16 (" WEIGHT_MEAN_21 $end
$var parameter 16 )" WEIGHT_MEAN_22 $end
$var parameter 16 *" WEIGHT_MEAN_31 $end
$var parameter 16 +" WEIGHT_MEAN_32 $end
$var parameter 16 ," WEIGHT_MEAN_41 $end
$var parameter 16 -" WEIGHT_MEAN_42 $end
$var parameter 16 ." WEIGHT_MEAN_51 $end
$var parameter 16 /" WEIGHT_MEAN_52 $end
$var parameter 16 0" WEIGHT_MEAN_61 $end
$var parameter 16 1" WEIGHT_MEAN_62 $end
$var parameter 16 2" WEIGHT_MEAN_71 $end
$var parameter 16 3" WEIGHT_MEAN_72 $end
$var parameter 16 4" WEIGHT_MEAN_81 $end
$var parameter 16 5" WEIGHT_MEAN_82 $end
$var parameter 16 6" WEIGHT_MEAN_91 $end
$var parameter 16 7" WEIGHT_MEAN_92 $end
$var parameter 16 8" WEIGHT_VAR_11 $end
$var parameter 16 9" WEIGHT_VAR_12 $end
$var parameter 16 :" WEIGHT_VAR_21 $end
$var parameter 16 ;" WEIGHT_VAR_22 $end
$var parameter 16 <" WEIGHT_VAR_31 $end
$var parameter 16 =" WEIGHT_VAR_32 $end
$var parameter 16 >" WEIGHT_VAR_41 $end
$var parameter 16 ?" WEIGHT_VAR_42 $end
$var parameter 16 @" WEIGHT_VAR_51 $end
$var parameter 16 A" WEIGHT_VAR_52 $end
$var parameter 16 B" WEIGHT_VAR_61 $end
$var parameter 16 C" WEIGHT_VAR_62 $end
$var parameter 16 D" WEIGHT_VAR_71 $end
$var parameter 16 E" WEIGHT_VAR_72 $end
$var parameter 16 F" WEIGHT_VAR_81 $end
$var parameter 16 G" WEIGHT_VAR_82 $end
$var parameter 16 H" WEIGHT_VAR_91 $end
$var parameter 16 I" WEIGHT_VAR_92 $end
$var parameter 32 J" WIDTH $end
$var reg 4 K" state [3:0] $end
$scope module mult_1 $end
$var wire 16 L" a1 [15:0] $end
$var wire 16 M" a2 [15:0] $end
$var wire 16 N" a3 [15:0] $end
$var wire 16 O" a4 [15:0] $end
$var wire 16 P" a5 [15:0] $end
$var wire 16 Q" a6 [15:0] $end
$var wire 16 R" a7 [15:0] $end
$var wire 16 S" a8 [15:0] $end
$var wire 16 T" a9 [15:0] $end
$var wire 16 U" b1 [15:0] $end
$var wire 16 V" b2 [15:0] $end
$var wire 16 W" b3 [15:0] $end
$var wire 16 X" b4 [15:0] $end
$var wire 16 Y" b5 [15:0] $end
$var wire 16 Z" b6 [15:0] $end
$var wire 16 [" b7 [15:0] $end
$var wire 16 \" b8 [15:0] $end
$var wire 16 ]" b9 [15:0] $end
$var wire 1 i busy $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 16 ^" o9 [15:0] $end
$var wire 16 _" o8 [15:0] $end
$var wire 16 `" o7 [15:0] $end
$var wire 16 a" o6 [15:0] $end
$var wire 16 b" o5 [15:0] $end
$var wire 16 c" o4 [15:0] $end
$var wire 16 d" o3 [15:0] $end
$var wire 16 e" o2 [15:0] $end
$var wire 16 f" o1 [15:0] $end
$var wire 1 g" busy9 $end
$var wire 1 h" busy8 $end
$var wire 1 i" busy7 $end
$var wire 1 j" busy6 $end
$var wire 1 k" busy5 $end
$var wire 1 l" busy4 $end
$var wire 1 m" busy3 $end
$var wire 1 n" busy2 $end
$var wire 1 o" busy1 $end
$var parameter 32 p" N $end
$var parameter 32 q" Q $end
$scope module mult1 $end
$var wire 16 r" a [15:0] $end
$var wire 16 s" b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 t" quantized_result_2cmp [14:0] $end
$var wire 15 u" quantized_result [14:0] $end
$var wire 16 v" q_result [15:0] $end
$var wire 1 w" overflow $end
$var wire 2 x" nextState [1:0] $end
$var wire 16 y" multiplier [15:0] $end
$var wire 16 z" multiplicand [15:0] $end
$var wire 32 {" f_result [31:0] $end
$var wire 1 o" busy $end
$var wire 16 |" b_2cmp [15:0] $end
$var wire 16 }" a_2cmp [15:0] $end
$var parameter 32 ~" N $end
$var parameter 32 !# Q $end
$var parameter 2 "# STATE_0 $end
$var parameter 2 ## STATE_1 $end
$var reg 2 $# state [1:0] $end
$upscope $end
$scope module mult2 $end
$var wire 16 %# a [15:0] $end
$var wire 16 &# b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 '# quantized_result_2cmp [14:0] $end
$var wire 15 (# quantized_result [14:0] $end
$var wire 16 )# q_result [15:0] $end
$var wire 1 *# overflow $end
$var wire 2 +# nextState [1:0] $end
$var wire 16 ,# multiplier [15:0] $end
$var wire 16 -# multiplicand [15:0] $end
$var wire 32 .# f_result [31:0] $end
$var wire 1 n" busy $end
$var wire 16 /# b_2cmp [15:0] $end
$var wire 16 0# a_2cmp [15:0] $end
$var parameter 32 1# N $end
$var parameter 32 2# Q $end
$var parameter 2 3# STATE_0 $end
$var parameter 2 4# STATE_1 $end
$var reg 2 5# state [1:0] $end
$upscope $end
$scope module mult3 $end
$var wire 16 6# a [15:0] $end
$var wire 16 7# b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 8# quantized_result_2cmp [14:0] $end
$var wire 15 9# quantized_result [14:0] $end
$var wire 16 :# q_result [15:0] $end
$var wire 1 ;# overflow $end
$var wire 2 <# nextState [1:0] $end
$var wire 16 =# multiplier [15:0] $end
$var wire 16 ># multiplicand [15:0] $end
$var wire 32 ?# f_result [31:0] $end
$var wire 1 m" busy $end
$var wire 16 @# b_2cmp [15:0] $end
$var wire 16 A# a_2cmp [15:0] $end
$var parameter 32 B# N $end
$var parameter 32 C# Q $end
$var parameter 2 D# STATE_0 $end
$var parameter 2 E# STATE_1 $end
$var reg 2 F# state [1:0] $end
$upscope $end
$scope module mult4 $end
$var wire 16 G# a [15:0] $end
$var wire 16 H# b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 I# quantized_result_2cmp [14:0] $end
$var wire 15 J# quantized_result [14:0] $end
$var wire 16 K# q_result [15:0] $end
$var wire 1 L# overflow $end
$var wire 2 M# nextState [1:0] $end
$var wire 16 N# multiplier [15:0] $end
$var wire 16 O# multiplicand [15:0] $end
$var wire 32 P# f_result [31:0] $end
$var wire 1 l" busy $end
$var wire 16 Q# b_2cmp [15:0] $end
$var wire 16 R# a_2cmp [15:0] $end
$var parameter 32 S# N $end
$var parameter 32 T# Q $end
$var parameter 2 U# STATE_0 $end
$var parameter 2 V# STATE_1 $end
$var reg 2 W# state [1:0] $end
$upscope $end
$scope module mult5 $end
$var wire 16 X# a [15:0] $end
$var wire 16 Y# b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 Z# quantized_result_2cmp [14:0] $end
$var wire 15 [# quantized_result [14:0] $end
$var wire 16 \# q_result [15:0] $end
$var wire 1 ]# overflow $end
$var wire 2 ^# nextState [1:0] $end
$var wire 16 _# multiplier [15:0] $end
$var wire 16 `# multiplicand [15:0] $end
$var wire 32 a# f_result [31:0] $end
$var wire 1 k" busy $end
$var wire 16 b# b_2cmp [15:0] $end
$var wire 16 c# a_2cmp [15:0] $end
$var parameter 32 d# N $end
$var parameter 32 e# Q $end
$var parameter 2 f# STATE_0 $end
$var parameter 2 g# STATE_1 $end
$var reg 2 h# state [1:0] $end
$upscope $end
$scope module mult6 $end
$var wire 16 i# a [15:0] $end
$var wire 16 j# b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 k# quantized_result_2cmp [14:0] $end
$var wire 15 l# quantized_result [14:0] $end
$var wire 16 m# q_result [15:0] $end
$var wire 1 n# overflow $end
$var wire 2 o# nextState [1:0] $end
$var wire 16 p# multiplier [15:0] $end
$var wire 16 q# multiplicand [15:0] $end
$var wire 32 r# f_result [31:0] $end
$var wire 1 j" busy $end
$var wire 16 s# b_2cmp [15:0] $end
$var wire 16 t# a_2cmp [15:0] $end
$var parameter 32 u# N $end
$var parameter 32 v# Q $end
$var parameter 2 w# STATE_0 $end
$var parameter 2 x# STATE_1 $end
$var reg 2 y# state [1:0] $end
$upscope $end
$scope module mult7 $end
$var wire 16 z# a [15:0] $end
$var wire 16 {# b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 |# quantized_result_2cmp [14:0] $end
$var wire 15 }# quantized_result [14:0] $end
$var wire 16 ~# q_result [15:0] $end
$var wire 1 !$ overflow $end
$var wire 2 "$ nextState [1:0] $end
$var wire 16 #$ multiplier [15:0] $end
$var wire 16 $$ multiplicand [15:0] $end
$var wire 32 %$ f_result [31:0] $end
$var wire 1 i" busy $end
$var wire 16 &$ b_2cmp [15:0] $end
$var wire 16 '$ a_2cmp [15:0] $end
$var parameter 32 ($ N $end
$var parameter 32 )$ Q $end
$var parameter 2 *$ STATE_0 $end
$var parameter 2 +$ STATE_1 $end
$var reg 2 ,$ state [1:0] $end
$upscope $end
$scope module mult8 $end
$var wire 16 -$ a [15:0] $end
$var wire 16 .$ b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 /$ quantized_result_2cmp [14:0] $end
$var wire 15 0$ quantized_result [14:0] $end
$var wire 16 1$ q_result [15:0] $end
$var wire 1 2$ overflow $end
$var wire 2 3$ nextState [1:0] $end
$var wire 16 4$ multiplier [15:0] $end
$var wire 16 5$ multiplicand [15:0] $end
$var wire 32 6$ f_result [31:0] $end
$var wire 1 h" busy $end
$var wire 16 7$ b_2cmp [15:0] $end
$var wire 16 8$ a_2cmp [15:0] $end
$var parameter 32 9$ N $end
$var parameter 32 :$ Q $end
$var parameter 2 ;$ STATE_0 $end
$var parameter 2 <$ STATE_1 $end
$var reg 2 =$ state [1:0] $end
$upscope $end
$scope module mult9 $end
$var wire 16 >$ a [15:0] $end
$var wire 16 ?$ b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 @$ quantized_result_2cmp [14:0] $end
$var wire 15 A$ quantized_result [14:0] $end
$var wire 16 B$ q_result [15:0] $end
$var wire 1 C$ overflow $end
$var wire 2 D$ nextState [1:0] $end
$var wire 16 E$ multiplier [15:0] $end
$var wire 16 F$ multiplicand [15:0] $end
$var wire 32 G$ f_result [31:0] $end
$var wire 1 g" busy $end
$var wire 16 H$ b_2cmp [15:0] $end
$var wire 16 I$ a_2cmp [15:0] $end
$var parameter 32 J$ N $end
$var parameter 32 K$ Q $end
$var parameter 2 L$ STATE_0 $end
$var parameter 2 M$ STATE_1 $end
$var reg 2 N$ state [1:0] $end
$upscope $end
$upscope $end
$scope module mult_2 $end
$var wire 16 O$ a1 [15:0] $end
$var wire 16 P$ a2 [15:0] $end
$var wire 16 Q$ a3 [15:0] $end
$var wire 16 R$ a4 [15:0] $end
$var wire 16 S$ a5 [15:0] $end
$var wire 16 T$ a6 [15:0] $end
$var wire 16 U$ a7 [15:0] $end
$var wire 16 V$ a8 [15:0] $end
$var wire 16 W$ a9 [15:0] $end
$var wire 16 X$ b1 [15:0] $end
$var wire 16 Y$ b2 [15:0] $end
$var wire 16 Z$ b3 [15:0] $end
$var wire 16 [$ b4 [15:0] $end
$var wire 16 \$ b5 [15:0] $end
$var wire 16 ]$ b6 [15:0] $end
$var wire 16 ^$ b7 [15:0] $end
$var wire 16 _$ b8 [15:0] $end
$var wire 16 `$ b9 [15:0] $end
$var wire 1 h busy $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 16 a$ o9 [15:0] $end
$var wire 16 b$ o8 [15:0] $end
$var wire 16 c$ o7 [15:0] $end
$var wire 16 d$ o6 [15:0] $end
$var wire 16 e$ o5 [15:0] $end
$var wire 16 f$ o4 [15:0] $end
$var wire 16 g$ o3 [15:0] $end
$var wire 16 h$ o2 [15:0] $end
$var wire 16 i$ o1 [15:0] $end
$var wire 1 j$ busy9 $end
$var wire 1 k$ busy8 $end
$var wire 1 l$ busy7 $end
$var wire 1 m$ busy6 $end
$var wire 1 n$ busy5 $end
$var wire 1 o$ busy4 $end
$var wire 1 p$ busy3 $end
$var wire 1 q$ busy2 $end
$var wire 1 r$ busy1 $end
$var parameter 32 s$ N $end
$var parameter 32 t$ Q $end
$scope module mult1 $end
$var wire 16 u$ a [15:0] $end
$var wire 16 v$ b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 w$ quantized_result_2cmp [14:0] $end
$var wire 15 x$ quantized_result [14:0] $end
$var wire 16 y$ q_result [15:0] $end
$var wire 1 z$ overflow $end
$var wire 2 {$ nextState [1:0] $end
$var wire 16 |$ multiplier [15:0] $end
$var wire 16 }$ multiplicand [15:0] $end
$var wire 32 ~$ f_result [31:0] $end
$var wire 1 r$ busy $end
$var wire 16 !% b_2cmp [15:0] $end
$var wire 16 "% a_2cmp [15:0] $end
$var parameter 32 #% N $end
$var parameter 32 $% Q $end
$var parameter 2 %% STATE_0 $end
$var parameter 2 &% STATE_1 $end
$var reg 2 '% state [1:0] $end
$upscope $end
$scope module mult2 $end
$var wire 16 (% a [15:0] $end
$var wire 16 )% b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 *% quantized_result_2cmp [14:0] $end
$var wire 15 +% quantized_result [14:0] $end
$var wire 16 ,% q_result [15:0] $end
$var wire 1 -% overflow $end
$var wire 2 .% nextState [1:0] $end
$var wire 16 /% multiplier [15:0] $end
$var wire 16 0% multiplicand [15:0] $end
$var wire 32 1% f_result [31:0] $end
$var wire 1 q$ busy $end
$var wire 16 2% b_2cmp [15:0] $end
$var wire 16 3% a_2cmp [15:0] $end
$var parameter 32 4% N $end
$var parameter 32 5% Q $end
$var parameter 2 6% STATE_0 $end
$var parameter 2 7% STATE_1 $end
$var reg 2 8% state [1:0] $end
$upscope $end
$scope module mult3 $end
$var wire 16 9% a [15:0] $end
$var wire 16 :% b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 ;% quantized_result_2cmp [14:0] $end
$var wire 15 <% quantized_result [14:0] $end
$var wire 16 =% q_result [15:0] $end
$var wire 1 >% overflow $end
$var wire 2 ?% nextState [1:0] $end
$var wire 16 @% multiplier [15:0] $end
$var wire 16 A% multiplicand [15:0] $end
$var wire 32 B% f_result [31:0] $end
$var wire 1 p$ busy $end
$var wire 16 C% b_2cmp [15:0] $end
$var wire 16 D% a_2cmp [15:0] $end
$var parameter 32 E% N $end
$var parameter 32 F% Q $end
$var parameter 2 G% STATE_0 $end
$var parameter 2 H% STATE_1 $end
$var reg 2 I% state [1:0] $end
$upscope $end
$scope module mult4 $end
$var wire 16 J% a [15:0] $end
$var wire 16 K% b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 L% quantized_result_2cmp [14:0] $end
$var wire 15 M% quantized_result [14:0] $end
$var wire 16 N% q_result [15:0] $end
$var wire 1 O% overflow $end
$var wire 2 P% nextState [1:0] $end
$var wire 16 Q% multiplier [15:0] $end
$var wire 16 R% multiplicand [15:0] $end
$var wire 32 S% f_result [31:0] $end
$var wire 1 o$ busy $end
$var wire 16 T% b_2cmp [15:0] $end
$var wire 16 U% a_2cmp [15:0] $end
$var parameter 32 V% N $end
$var parameter 32 W% Q $end
$var parameter 2 X% STATE_0 $end
$var parameter 2 Y% STATE_1 $end
$var reg 2 Z% state [1:0] $end
$upscope $end
$scope module mult5 $end
$var wire 16 [% a [15:0] $end
$var wire 16 \% b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 ]% quantized_result_2cmp [14:0] $end
$var wire 15 ^% quantized_result [14:0] $end
$var wire 16 _% q_result [15:0] $end
$var wire 1 `% overflow $end
$var wire 2 a% nextState [1:0] $end
$var wire 16 b% multiplier [15:0] $end
$var wire 16 c% multiplicand [15:0] $end
$var wire 32 d% f_result [31:0] $end
$var wire 1 n$ busy $end
$var wire 16 e% b_2cmp [15:0] $end
$var wire 16 f% a_2cmp [15:0] $end
$var parameter 32 g% N $end
$var parameter 32 h% Q $end
$var parameter 2 i% STATE_0 $end
$var parameter 2 j% STATE_1 $end
$var reg 2 k% state [1:0] $end
$upscope $end
$scope module mult6 $end
$var wire 16 l% a [15:0] $end
$var wire 16 m% b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 n% quantized_result_2cmp [14:0] $end
$var wire 15 o% quantized_result [14:0] $end
$var wire 16 p% q_result [15:0] $end
$var wire 1 q% overflow $end
$var wire 2 r% nextState [1:0] $end
$var wire 16 s% multiplier [15:0] $end
$var wire 16 t% multiplicand [15:0] $end
$var wire 32 u% f_result [31:0] $end
$var wire 1 m$ busy $end
$var wire 16 v% b_2cmp [15:0] $end
$var wire 16 w% a_2cmp [15:0] $end
$var parameter 32 x% N $end
$var parameter 32 y% Q $end
$var parameter 2 z% STATE_0 $end
$var parameter 2 {% STATE_1 $end
$var reg 2 |% state [1:0] $end
$upscope $end
$scope module mult7 $end
$var wire 16 }% a [15:0] $end
$var wire 16 ~% b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 !& quantized_result_2cmp [14:0] $end
$var wire 15 "& quantized_result [14:0] $end
$var wire 16 #& q_result [15:0] $end
$var wire 1 $& overflow $end
$var wire 2 %& nextState [1:0] $end
$var wire 16 && multiplier [15:0] $end
$var wire 16 '& multiplicand [15:0] $end
$var wire 32 (& f_result [31:0] $end
$var wire 1 l$ busy $end
$var wire 16 )& b_2cmp [15:0] $end
$var wire 16 *& a_2cmp [15:0] $end
$var parameter 32 +& N $end
$var parameter 32 ,& Q $end
$var parameter 2 -& STATE_0 $end
$var parameter 2 .& STATE_1 $end
$var reg 2 /& state [1:0] $end
$upscope $end
$scope module mult8 $end
$var wire 16 0& a [15:0] $end
$var wire 16 1& b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 2& quantized_result_2cmp [14:0] $end
$var wire 15 3& quantized_result [14:0] $end
$var wire 16 4& q_result [15:0] $end
$var wire 1 5& overflow $end
$var wire 2 6& nextState [1:0] $end
$var wire 16 7& multiplier [15:0] $end
$var wire 16 8& multiplicand [15:0] $end
$var wire 32 9& f_result [31:0] $end
$var wire 1 k$ busy $end
$var wire 16 :& b_2cmp [15:0] $end
$var wire 16 ;& a_2cmp [15:0] $end
$var parameter 32 <& N $end
$var parameter 32 =& Q $end
$var parameter 2 >& STATE_0 $end
$var parameter 2 ?& STATE_1 $end
$var reg 2 @& state [1:0] $end
$upscope $end
$scope module mult9 $end
$var wire 16 A& a [15:0] $end
$var wire 16 B& b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 C& quantized_result_2cmp [14:0] $end
$var wire 15 D& quantized_result [14:0] $end
$var wire 16 E& q_result [15:0] $end
$var wire 1 F& overflow $end
$var wire 2 G& nextState [1:0] $end
$var wire 16 H& multiplier [15:0] $end
$var wire 16 I& multiplicand [15:0] $end
$var wire 32 J& f_result [31:0] $end
$var wire 1 j$ busy $end
$var wire 16 K& b_2cmp [15:0] $end
$var wire 16 L& a_2cmp [15:0] $end
$var parameter 32 M& N $end
$var parameter 32 N& Q $end
$var parameter 2 O& STATE_0 $end
$var parameter 2 P& STATE_1 $end
$var reg 2 Q& state [1:0] $end
$upscope $end
$upscope $end
$scope module mult_3 $end
$var wire 16 R& a1 [15:0] $end
$var wire 16 S& a2 [15:0] $end
$var wire 16 T& a3 [15:0] $end
$var wire 16 U& a4 [15:0] $end
$var wire 16 V& a5 [15:0] $end
$var wire 16 W& a6 [15:0] $end
$var wire 16 X& a7 [15:0] $end
$var wire 16 Y& a8 [15:0] $end
$var wire 16 Z& a9 [15:0] $end
$var wire 16 [& b1 [15:0] $end
$var wire 16 \& b2 [15:0] $end
$var wire 16 ]& b3 [15:0] $end
$var wire 16 ^& b4 [15:0] $end
$var wire 16 _& b5 [15:0] $end
$var wire 16 `& b6 [15:0] $end
$var wire 16 a& b7 [15:0] $end
$var wire 16 b& b8 [15:0] $end
$var wire 16 c& b9 [15:0] $end
$var wire 1 g busy $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 16 d& o9 [15:0] $end
$var wire 16 e& o8 [15:0] $end
$var wire 16 f& o7 [15:0] $end
$var wire 16 g& o6 [15:0] $end
$var wire 16 h& o5 [15:0] $end
$var wire 16 i& o4 [15:0] $end
$var wire 16 j& o3 [15:0] $end
$var wire 16 k& o2 [15:0] $end
$var wire 16 l& o1 [15:0] $end
$var wire 1 m& busy9 $end
$var wire 1 n& busy8 $end
$var wire 1 o& busy7 $end
$var wire 1 p& busy6 $end
$var wire 1 q& busy5 $end
$var wire 1 r& busy4 $end
$var wire 1 s& busy3 $end
$var wire 1 t& busy2 $end
$var wire 1 u& busy1 $end
$var parameter 32 v& N $end
$var parameter 32 w& Q $end
$scope module mult1 $end
$var wire 16 x& a [15:0] $end
$var wire 16 y& b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 z& quantized_result_2cmp [14:0] $end
$var wire 15 {& quantized_result [14:0] $end
$var wire 16 |& q_result [15:0] $end
$var wire 1 }& overflow $end
$var wire 2 ~& nextState [1:0] $end
$var wire 16 !' multiplier [15:0] $end
$var wire 16 "' multiplicand [15:0] $end
$var wire 32 #' f_result [31:0] $end
$var wire 1 u& busy $end
$var wire 16 $' b_2cmp [15:0] $end
$var wire 16 %' a_2cmp [15:0] $end
$var parameter 32 &' N $end
$var parameter 32 '' Q $end
$var parameter 2 (' STATE_0 $end
$var parameter 2 )' STATE_1 $end
$var reg 2 *' state [1:0] $end
$upscope $end
$scope module mult2 $end
$var wire 16 +' a [15:0] $end
$var wire 16 ,' b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 -' quantized_result_2cmp [14:0] $end
$var wire 15 .' quantized_result [14:0] $end
$var wire 16 /' q_result [15:0] $end
$var wire 1 0' overflow $end
$var wire 2 1' nextState [1:0] $end
$var wire 16 2' multiplier [15:0] $end
$var wire 16 3' multiplicand [15:0] $end
$var wire 32 4' f_result [31:0] $end
$var wire 1 t& busy $end
$var wire 16 5' b_2cmp [15:0] $end
$var wire 16 6' a_2cmp [15:0] $end
$var parameter 32 7' N $end
$var parameter 32 8' Q $end
$var parameter 2 9' STATE_0 $end
$var parameter 2 :' STATE_1 $end
$var reg 2 ;' state [1:0] $end
$upscope $end
$scope module mult3 $end
$var wire 16 <' a [15:0] $end
$var wire 16 =' b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 >' quantized_result_2cmp [14:0] $end
$var wire 15 ?' quantized_result [14:0] $end
$var wire 16 @' q_result [15:0] $end
$var wire 1 A' overflow $end
$var wire 2 B' nextState [1:0] $end
$var wire 16 C' multiplier [15:0] $end
$var wire 16 D' multiplicand [15:0] $end
$var wire 32 E' f_result [31:0] $end
$var wire 1 s& busy $end
$var wire 16 F' b_2cmp [15:0] $end
$var wire 16 G' a_2cmp [15:0] $end
$var parameter 32 H' N $end
$var parameter 32 I' Q $end
$var parameter 2 J' STATE_0 $end
$var parameter 2 K' STATE_1 $end
$var reg 2 L' state [1:0] $end
$upscope $end
$scope module mult4 $end
$var wire 16 M' a [15:0] $end
$var wire 16 N' b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 O' quantized_result_2cmp [14:0] $end
$var wire 15 P' quantized_result [14:0] $end
$var wire 16 Q' q_result [15:0] $end
$var wire 1 R' overflow $end
$var wire 2 S' nextState [1:0] $end
$var wire 16 T' multiplier [15:0] $end
$var wire 16 U' multiplicand [15:0] $end
$var wire 32 V' f_result [31:0] $end
$var wire 1 r& busy $end
$var wire 16 W' b_2cmp [15:0] $end
$var wire 16 X' a_2cmp [15:0] $end
$var parameter 32 Y' N $end
$var parameter 32 Z' Q $end
$var parameter 2 [' STATE_0 $end
$var parameter 2 \' STATE_1 $end
$var reg 2 ]' state [1:0] $end
$upscope $end
$scope module mult5 $end
$var wire 16 ^' a [15:0] $end
$var wire 16 _' b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 `' quantized_result_2cmp [14:0] $end
$var wire 15 a' quantized_result [14:0] $end
$var wire 16 b' q_result [15:0] $end
$var wire 1 c' overflow $end
$var wire 2 d' nextState [1:0] $end
$var wire 16 e' multiplier [15:0] $end
$var wire 16 f' multiplicand [15:0] $end
$var wire 32 g' f_result [31:0] $end
$var wire 1 q& busy $end
$var wire 16 h' b_2cmp [15:0] $end
$var wire 16 i' a_2cmp [15:0] $end
$var parameter 32 j' N $end
$var parameter 32 k' Q $end
$var parameter 2 l' STATE_0 $end
$var parameter 2 m' STATE_1 $end
$var reg 2 n' state [1:0] $end
$upscope $end
$scope module mult6 $end
$var wire 16 o' a [15:0] $end
$var wire 16 p' b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 q' quantized_result_2cmp [14:0] $end
$var wire 15 r' quantized_result [14:0] $end
$var wire 16 s' q_result [15:0] $end
$var wire 1 t' overflow $end
$var wire 2 u' nextState [1:0] $end
$var wire 16 v' multiplier [15:0] $end
$var wire 16 w' multiplicand [15:0] $end
$var wire 32 x' f_result [31:0] $end
$var wire 1 p& busy $end
$var wire 16 y' b_2cmp [15:0] $end
$var wire 16 z' a_2cmp [15:0] $end
$var parameter 32 {' N $end
$var parameter 32 |' Q $end
$var parameter 2 }' STATE_0 $end
$var parameter 2 ~' STATE_1 $end
$var reg 2 !( state [1:0] $end
$upscope $end
$scope module mult7 $end
$var wire 16 "( a [15:0] $end
$var wire 16 #( b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 $( quantized_result_2cmp [14:0] $end
$var wire 15 %( quantized_result [14:0] $end
$var wire 16 &( q_result [15:0] $end
$var wire 1 '( overflow $end
$var wire 2 (( nextState [1:0] $end
$var wire 16 )( multiplier [15:0] $end
$var wire 16 *( multiplicand [15:0] $end
$var wire 32 +( f_result [31:0] $end
$var wire 1 o& busy $end
$var wire 16 ,( b_2cmp [15:0] $end
$var wire 16 -( a_2cmp [15:0] $end
$var parameter 32 .( N $end
$var parameter 32 /( Q $end
$var parameter 2 0( STATE_0 $end
$var parameter 2 1( STATE_1 $end
$var reg 2 2( state [1:0] $end
$upscope $end
$scope module mult8 $end
$var wire 16 3( a [15:0] $end
$var wire 16 4( b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 5( quantized_result_2cmp [14:0] $end
$var wire 15 6( quantized_result [14:0] $end
$var wire 16 7( q_result [15:0] $end
$var wire 1 8( overflow $end
$var wire 2 9( nextState [1:0] $end
$var wire 16 :( multiplier [15:0] $end
$var wire 16 ;( multiplicand [15:0] $end
$var wire 32 <( f_result [31:0] $end
$var wire 1 n& busy $end
$var wire 16 =( b_2cmp [15:0] $end
$var wire 16 >( a_2cmp [15:0] $end
$var parameter 32 ?( N $end
$var parameter 32 @( Q $end
$var parameter 2 A( STATE_0 $end
$var parameter 2 B( STATE_1 $end
$var reg 2 C( state [1:0] $end
$upscope $end
$scope module mult9 $end
$var wire 16 D( a [15:0] $end
$var wire 16 E( b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 F( quantized_result_2cmp [14:0] $end
$var wire 15 G( quantized_result [14:0] $end
$var wire 16 H( q_result [15:0] $end
$var wire 1 I( overflow $end
$var wire 2 J( nextState [1:0] $end
$var wire 16 K( multiplier [15:0] $end
$var wire 16 L( multiplicand [15:0] $end
$var wire 32 M( f_result [31:0] $end
$var wire 1 m& busy $end
$var wire 16 N( b_2cmp [15:0] $end
$var wire 16 O( a_2cmp [15:0] $end
$var parameter 32 P( N $end
$var parameter 32 Q( Q $end
$var parameter 2 R( STATE_0 $end
$var parameter 2 S( STATE_1 $end
$var reg 2 T( state [1:0] $end
$upscope $end
$upscope $end
$scope module mult_4 $end
$var wire 16 U( a1 [15:0] $end
$var wire 16 V( a2 [15:0] $end
$var wire 16 W( a3 [15:0] $end
$var wire 16 X( a4 [15:0] $end
$var wire 16 Y( a5 [15:0] $end
$var wire 16 Z( a6 [15:0] $end
$var wire 16 [( a7 [15:0] $end
$var wire 16 \( a8 [15:0] $end
$var wire 16 ]( a9 [15:0] $end
$var wire 16 ^( b1 [15:0] $end
$var wire 16 _( b2 [15:0] $end
$var wire 16 `( b3 [15:0] $end
$var wire 16 a( b4 [15:0] $end
$var wire 16 b( b5 [15:0] $end
$var wire 16 c( b6 [15:0] $end
$var wire 16 d( b7 [15:0] $end
$var wire 16 e( b8 [15:0] $end
$var wire 16 f( b9 [15:0] $end
$var wire 1 f busy $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 16 g( o9 [15:0] $end
$var wire 16 h( o8 [15:0] $end
$var wire 16 i( o7 [15:0] $end
$var wire 16 j( o6 [15:0] $end
$var wire 16 k( o5 [15:0] $end
$var wire 16 l( o4 [15:0] $end
$var wire 16 m( o3 [15:0] $end
$var wire 16 n( o2 [15:0] $end
$var wire 16 o( o1 [15:0] $end
$var wire 1 p( busy9 $end
$var wire 1 q( busy8 $end
$var wire 1 r( busy7 $end
$var wire 1 s( busy6 $end
$var wire 1 t( busy5 $end
$var wire 1 u( busy4 $end
$var wire 1 v( busy3 $end
$var wire 1 w( busy2 $end
$var wire 1 x( busy1 $end
$var parameter 32 y( N $end
$var parameter 32 z( Q $end
$scope module mult1 $end
$var wire 16 {( a [15:0] $end
$var wire 16 |( b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 }( quantized_result_2cmp [14:0] $end
$var wire 15 ~( quantized_result [14:0] $end
$var wire 16 !) q_result [15:0] $end
$var wire 1 ") overflow $end
$var wire 2 #) nextState [1:0] $end
$var wire 16 $) multiplier [15:0] $end
$var wire 16 %) multiplicand [15:0] $end
$var wire 32 &) f_result [31:0] $end
$var wire 1 x( busy $end
$var wire 16 ') b_2cmp [15:0] $end
$var wire 16 () a_2cmp [15:0] $end
$var parameter 32 )) N $end
$var parameter 32 *) Q $end
$var parameter 2 +) STATE_0 $end
$var parameter 2 ,) STATE_1 $end
$var reg 2 -) state [1:0] $end
$upscope $end
$scope module mult2 $end
$var wire 16 .) a [15:0] $end
$var wire 16 /) b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 0) quantized_result_2cmp [14:0] $end
$var wire 15 1) quantized_result [14:0] $end
$var wire 16 2) q_result [15:0] $end
$var wire 1 3) overflow $end
$var wire 2 4) nextState [1:0] $end
$var wire 16 5) multiplier [15:0] $end
$var wire 16 6) multiplicand [15:0] $end
$var wire 32 7) f_result [31:0] $end
$var wire 1 w( busy $end
$var wire 16 8) b_2cmp [15:0] $end
$var wire 16 9) a_2cmp [15:0] $end
$var parameter 32 :) N $end
$var parameter 32 ;) Q $end
$var parameter 2 <) STATE_0 $end
$var parameter 2 =) STATE_1 $end
$var reg 2 >) state [1:0] $end
$upscope $end
$scope module mult3 $end
$var wire 16 ?) a [15:0] $end
$var wire 16 @) b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 A) quantized_result_2cmp [14:0] $end
$var wire 15 B) quantized_result [14:0] $end
$var wire 16 C) q_result [15:0] $end
$var wire 1 D) overflow $end
$var wire 2 E) nextState [1:0] $end
$var wire 16 F) multiplier [15:0] $end
$var wire 16 G) multiplicand [15:0] $end
$var wire 32 H) f_result [31:0] $end
$var wire 1 v( busy $end
$var wire 16 I) b_2cmp [15:0] $end
$var wire 16 J) a_2cmp [15:0] $end
$var parameter 32 K) N $end
$var parameter 32 L) Q $end
$var parameter 2 M) STATE_0 $end
$var parameter 2 N) STATE_1 $end
$var reg 2 O) state [1:0] $end
$upscope $end
$scope module mult4 $end
$var wire 16 P) a [15:0] $end
$var wire 16 Q) b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 R) quantized_result_2cmp [14:0] $end
$var wire 15 S) quantized_result [14:0] $end
$var wire 16 T) q_result [15:0] $end
$var wire 1 U) overflow $end
$var wire 2 V) nextState [1:0] $end
$var wire 16 W) multiplier [15:0] $end
$var wire 16 X) multiplicand [15:0] $end
$var wire 32 Y) f_result [31:0] $end
$var wire 1 u( busy $end
$var wire 16 Z) b_2cmp [15:0] $end
$var wire 16 [) a_2cmp [15:0] $end
$var parameter 32 \) N $end
$var parameter 32 ]) Q $end
$var parameter 2 ^) STATE_0 $end
$var parameter 2 _) STATE_1 $end
$var reg 2 `) state [1:0] $end
$upscope $end
$scope module mult5 $end
$var wire 16 a) a [15:0] $end
$var wire 16 b) b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 c) quantized_result_2cmp [14:0] $end
$var wire 15 d) quantized_result [14:0] $end
$var wire 16 e) q_result [15:0] $end
$var wire 1 f) overflow $end
$var wire 2 g) nextState [1:0] $end
$var wire 16 h) multiplier [15:0] $end
$var wire 16 i) multiplicand [15:0] $end
$var wire 32 j) f_result [31:0] $end
$var wire 1 t( busy $end
$var wire 16 k) b_2cmp [15:0] $end
$var wire 16 l) a_2cmp [15:0] $end
$var parameter 32 m) N $end
$var parameter 32 n) Q $end
$var parameter 2 o) STATE_0 $end
$var parameter 2 p) STATE_1 $end
$var reg 2 q) state [1:0] $end
$upscope $end
$scope module mult6 $end
$var wire 16 r) a [15:0] $end
$var wire 16 s) b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 t) quantized_result_2cmp [14:0] $end
$var wire 15 u) quantized_result [14:0] $end
$var wire 16 v) q_result [15:0] $end
$var wire 1 w) overflow $end
$var wire 2 x) nextState [1:0] $end
$var wire 16 y) multiplier [15:0] $end
$var wire 16 z) multiplicand [15:0] $end
$var wire 32 {) f_result [31:0] $end
$var wire 1 s( busy $end
$var wire 16 |) b_2cmp [15:0] $end
$var wire 16 }) a_2cmp [15:0] $end
$var parameter 32 ~) N $end
$var parameter 32 !* Q $end
$var parameter 2 "* STATE_0 $end
$var parameter 2 #* STATE_1 $end
$var reg 2 $* state [1:0] $end
$upscope $end
$scope module mult7 $end
$var wire 16 %* a [15:0] $end
$var wire 16 &* b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 '* quantized_result_2cmp [14:0] $end
$var wire 15 (* quantized_result [14:0] $end
$var wire 16 )* q_result [15:0] $end
$var wire 1 ** overflow $end
$var wire 2 +* nextState [1:0] $end
$var wire 16 ,* multiplier [15:0] $end
$var wire 16 -* multiplicand [15:0] $end
$var wire 32 .* f_result [31:0] $end
$var wire 1 r( busy $end
$var wire 16 /* b_2cmp [15:0] $end
$var wire 16 0* a_2cmp [15:0] $end
$var parameter 32 1* N $end
$var parameter 32 2* Q $end
$var parameter 2 3* STATE_0 $end
$var parameter 2 4* STATE_1 $end
$var reg 2 5* state [1:0] $end
$upscope $end
$scope module mult8 $end
$var wire 16 6* a [15:0] $end
$var wire 16 7* b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 8* quantized_result_2cmp [14:0] $end
$var wire 15 9* quantized_result [14:0] $end
$var wire 16 :* q_result [15:0] $end
$var wire 1 ;* overflow $end
$var wire 2 <* nextState [1:0] $end
$var wire 16 =* multiplier [15:0] $end
$var wire 16 >* multiplicand [15:0] $end
$var wire 32 ?* f_result [31:0] $end
$var wire 1 q( busy $end
$var wire 16 @* b_2cmp [15:0] $end
$var wire 16 A* a_2cmp [15:0] $end
$var parameter 32 B* N $end
$var parameter 32 C* Q $end
$var parameter 2 D* STATE_0 $end
$var parameter 2 E* STATE_1 $end
$var reg 2 F* state [1:0] $end
$upscope $end
$scope module mult9 $end
$var wire 16 G* a [15:0] $end
$var wire 16 H* b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Y start $end
$var wire 15 I* quantized_result_2cmp [14:0] $end
$var wire 15 J* quantized_result [14:0] $end
$var wire 16 K* q_result [15:0] $end
$var wire 1 L* overflow $end
$var wire 2 M* nextState [1:0] $end
$var wire 16 N* multiplier [15:0] $end
$var wire 16 O* multiplicand [15:0] $end
$var wire 32 P* f_result [31:0] $end
$var wire 1 p( busy $end
$var wire 16 Q* b_2cmp [15:0] $end
$var wire 16 R* a_2cmp [15:0] $end
$var parameter 32 S* N $end
$var parameter 32 T* Q $end
$var parameter 2 U* STATE_0 $end
$var parameter 2 V* STATE_1 $end
$var reg 2 W* state [1:0] $end
$upscope $end
$upscope $end
$scope module net_a1_mult $end
$var wire 16 X* b [15:0] $end
$var wire 1 % clk $end
$var wire 1 [ start $end
$var wire 15 Y* quantized_result_2cmp [14:0] $end
$var wire 15 Z* quantized_result [14:0] $end
$var wire 16 [* q_result [15:0] $end
$var wire 1 \* overflow $end
$var wire 2 ]* nextState [1:0] $end
$var wire 16 ^* multiplier [15:0] $end
$var wire 16 _* multiplicand [15:0] $end
$var wire 32 `* f_result [31:0] $end
$var wire 1 k busy $end
$var wire 16 a* b_2cmp [15:0] $end
$var wire 16 b* a_2cmp [15:0] $end
$var wire 16 c* a [15:0] $end
$var parameter 32 d* N $end
$var parameter 32 e* Q $end
$var parameter 2 f* STATE_0 $end
$var parameter 2 g* STATE_1 $end
$var reg 2 h* state [1:0] $end
$upscope $end
$scope module net_a2_mult $end
$var wire 16 i* b [15:0] $end
$var wire 1 % clk $end
$var wire 1 Z start $end
$var wire 15 j* quantized_result_2cmp [14:0] $end
$var wire 15 k* quantized_result [14:0] $end
$var wire 16 l* q_result [15:0] $end
$var wire 1 m* overflow $end
$var wire 2 n* nextState [1:0] $end
$var wire 16 o* multiplier [15:0] $end
$var wire 16 p* multiplicand [15:0] $end
$var wire 32 q* f_result [31:0] $end
$var wire 1 j busy $end
$var wire 16 r* b_2cmp [15:0] $end
$var wire 16 s* a_2cmp [15:0] $end
$var wire 16 t* a [15:0] $end
$var parameter 32 u* N $end
$var parameter 32 v* Q $end
$var parameter 2 w* STATE_0 $end
$var parameter 2 x* STATE_1 $end
$var reg 2 y* state [1:0] $end
$upscope $end
$scope module softplust_1 $end
$var wire 1 % clk $end
$var wire 1 X start $end
$var wire 16 z* x [15:0] $end
$var wire 16 {* y [15:0] $end
$var wire 16 |* slope [15:0] $end
$var wire 1 }* seg_9 $end
$var wire 1 ~* seg_8 $end
$var wire 1 !+ seg_7 $end
$var wire 1 "+ seg_6 $end
$var wire 1 #+ seg_5 $end
$var wire 1 $+ seg_4 $end
$var wire 1 %+ seg_3 $end
$var wire 1 &+ seg_2 $end
$var wire 1 '+ seg_1 $end
$var wire 16 (+ res_mult [15:0] $end
$var wire 1 )+ nextState $end
$var wire 16 *+ intersect [15:0] $end
$var parameter 32 ++ N $end
$var parameter 32 ,+ Q $end
$var parameter 1 -+ STATE_0 $end
$var parameter 1 .+ STATE_1 $end
$var parameter 16 /+ abscissas_1 $end
$var parameter 16 0+ abscissas_2 $end
$var parameter 16 1+ abscissas_3 $end
$var parameter 16 2+ abscissas_4 $end
$var parameter 16 3+ abscissas_5 $end
$var parameter 16 4+ abscissas_6 $end
$var parameter 16 5+ abscissas_7 $end
$var parameter 16 6+ abscissas_8 $end
$var parameter 16 7+ abscissas_9 $end
$var parameter 16 8+ intersect_1 $end
$var parameter 16 9+ intersect_2 $end
$var parameter 16 :+ intersect_3 $end
$var parameter 16 ;+ intersect_4 $end
$var parameter 16 <+ intersect_5 $end
$var parameter 16 =+ intersect_6 $end
$var parameter 16 >+ intersect_7 $end
$var parameter 16 ?+ intersect_8 $end
$var parameter 16 @+ slope_1 $end
$var parameter 16 A+ slope_2 $end
$var parameter 16 B+ slope_3 $end
$var parameter 16 C+ slope_4 $end
$var parameter 16 D+ slope_5 $end
$var parameter 16 E+ slope_6 $end
$var parameter 16 F+ slope_7 $end
$var parameter 16 G+ slope_8 $end
$var reg 1 H+ state $end
$scope module m1 $end
$var wire 16 I+ a [15:0] $end
$var wire 16 J+ b [15:0] $end
$var wire 1 % clk $end
$var wire 1 X start $end
$var wire 15 K+ quantized_result_2cmp [14:0] $end
$var wire 15 L+ quantized_result [14:0] $end
$var wire 16 M+ q_result [15:0] $end
$var wire 1 N+ overflow $end
$var wire 2 O+ nextState [1:0] $end
$var wire 16 P+ multiplier [15:0] $end
$var wire 16 Q+ multiplicand [15:0] $end
$var wire 32 R+ f_result [31:0] $end
$var wire 1 S+ busy $end
$var wire 16 T+ b_2cmp [15:0] $end
$var wire 16 U+ a_2cmp [15:0] $end
$var parameter 32 V+ N $end
$var parameter 32 W+ Q $end
$var parameter 2 X+ STATE_0 $end
$var parameter 2 Y+ STATE_1 $end
$var reg 2 Z+ state [1:0] $end
$upscope $end
$scope module s1 $end
$var wire 16 [+ a [15:0] $end
$var wire 16 \+ b [15:0] $end
$var wire 1 ]+ clk $end
$var wire 1 ^+ rst $end
$var wire 1 '+ y $end
$var wire 4 _+ int_b [15:12] $end
$var wire 4 `+ int_a [15:12] $end
$var wire 12 a+ frac_b [11:0] $end
$var wire 12 b+ frac_a [11:0] $end
$var parameter 32 c+ N $end
$var parameter 32 d+ Q $end
$upscope $end
$scope module s2 $end
$var wire 16 e+ a [15:0] $end
$var wire 16 f+ b [15:0] $end
$var wire 1 g+ clk $end
$var wire 1 h+ rst $end
$var wire 1 &+ y $end
$var wire 4 i+ int_b [15:12] $end
$var wire 4 j+ int_a [15:12] $end
$var wire 12 k+ frac_b [11:0] $end
$var wire 12 l+ frac_a [11:0] $end
$var parameter 32 m+ N $end
$var parameter 32 n+ Q $end
$upscope $end
$scope module s3 $end
$var wire 16 o+ a [15:0] $end
$var wire 16 p+ b [15:0] $end
$var wire 1 q+ clk $end
$var wire 1 r+ rst $end
$var wire 1 %+ y $end
$var wire 4 s+ int_b [15:12] $end
$var wire 4 t+ int_a [15:12] $end
$var wire 12 u+ frac_b [11:0] $end
$var wire 12 v+ frac_a [11:0] $end
$var parameter 32 w+ N $end
$var parameter 32 x+ Q $end
$upscope $end
$scope module s4 $end
$var wire 16 y+ a [15:0] $end
$var wire 16 z+ b [15:0] $end
$var wire 1 {+ clk $end
$var wire 1 |+ rst $end
$var wire 1 $+ y $end
$var wire 4 }+ int_b [15:12] $end
$var wire 4 ~+ int_a [15:12] $end
$var wire 12 !, frac_b [11:0] $end
$var wire 12 ", frac_a [11:0] $end
$var parameter 32 #, N $end
$var parameter 32 $, Q $end
$upscope $end
$scope module s5 $end
$var wire 16 %, a [15:0] $end
$var wire 16 &, b [15:0] $end
$var wire 1 ', clk $end
$var wire 1 (, rst $end
$var wire 1 #+ y $end
$var wire 4 ), int_b [15:12] $end
$var wire 4 *, int_a [15:12] $end
$var wire 12 +, frac_b [11:0] $end
$var wire 12 ,, frac_a [11:0] $end
$var parameter 32 -, N $end
$var parameter 32 ., Q $end
$upscope $end
$scope module s6 $end
$var wire 16 /, a [15:0] $end
$var wire 16 0, b [15:0] $end
$var wire 1 1, clk $end
$var wire 1 2, rst $end
$var wire 1 "+ y $end
$var wire 4 3, int_b [15:12] $end
$var wire 4 4, int_a [15:12] $end
$var wire 12 5, frac_b [11:0] $end
$var wire 12 6, frac_a [11:0] $end
$var parameter 32 7, N $end
$var parameter 32 8, Q $end
$upscope $end
$scope module s7 $end
$var wire 16 9, a [15:0] $end
$var wire 16 :, b [15:0] $end
$var wire 1 ;, clk $end
$var wire 1 <, rst $end
$var wire 1 !+ y $end
$var wire 4 =, int_b [15:12] $end
$var wire 4 >, int_a [15:12] $end
$var wire 12 ?, frac_b [11:0] $end
$var wire 12 @, frac_a [11:0] $end
$var parameter 32 A, N $end
$var parameter 32 B, Q $end
$upscope $end
$scope module s8 $end
$var wire 16 C, a [15:0] $end
$var wire 16 D, b [15:0] $end
$var wire 1 E, clk $end
$var wire 1 F, rst $end
$var wire 1 ~* y $end
$var wire 4 G, int_b [15:12] $end
$var wire 4 H, int_a [15:12] $end
$var wire 12 I, frac_b [11:0] $end
$var wire 12 J, frac_a [11:0] $end
$var parameter 32 K, N $end
$var parameter 32 L, Q $end
$upscope $end
$scope module s9 $end
$var wire 16 M, a [15:0] $end
$var wire 16 N, b [15:0] $end
$var wire 1 O, clk $end
$var wire 1 P, rst $end
$var wire 1 }* y $end
$var wire 4 Q, int_b [15:12] $end
$var wire 4 R, int_a [15:12] $end
$var wire 12 S, frac_b [11:0] $end
$var wire 12 T, frac_a [11:0] $end
$var parameter 32 U, N $end
$var parameter 32 V, Q $end
$upscope $end
$upscope $end
$scope module softplust_2 $end
$var wire 1 % clk $end
$var wire 1 X start $end
$var wire 16 W, x [15:0] $end
$var wire 16 X, y [15:0] $end
$var wire 16 Y, slope [15:0] $end
$var wire 1 Z, seg_9 $end
$var wire 1 [, seg_8 $end
$var wire 1 \, seg_7 $end
$var wire 1 ], seg_6 $end
$var wire 1 ^, seg_5 $end
$var wire 1 _, seg_4 $end
$var wire 1 `, seg_3 $end
$var wire 1 a, seg_2 $end
$var wire 1 b, seg_1 $end
$var wire 16 c, res_mult [15:0] $end
$var wire 1 d, nextState $end
$var wire 16 e, intersect [15:0] $end
$var parameter 32 f, N $end
$var parameter 32 g, Q $end
$var parameter 1 h, STATE_0 $end
$var parameter 1 i, STATE_1 $end
$var parameter 16 j, abscissas_1 $end
$var parameter 16 k, abscissas_2 $end
$var parameter 16 l, abscissas_3 $end
$var parameter 16 m, abscissas_4 $end
$var parameter 16 n, abscissas_5 $end
$var parameter 16 o, abscissas_6 $end
$var parameter 16 p, abscissas_7 $end
$var parameter 16 q, abscissas_8 $end
$var parameter 16 r, abscissas_9 $end
$var parameter 16 s, intersect_1 $end
$var parameter 16 t, intersect_2 $end
$var parameter 16 u, intersect_3 $end
$var parameter 16 v, intersect_4 $end
$var parameter 16 w, intersect_5 $end
$var parameter 16 x, intersect_6 $end
$var parameter 16 y, intersect_7 $end
$var parameter 16 z, intersect_8 $end
$var parameter 16 {, slope_1 $end
$var parameter 16 |, slope_2 $end
$var parameter 16 }, slope_3 $end
$var parameter 16 ~, slope_4 $end
$var parameter 16 !- slope_5 $end
$var parameter 16 "- slope_6 $end
$var parameter 16 #- slope_7 $end
$var parameter 16 $- slope_8 $end
$var reg 1 %- state $end
$scope module m1 $end
$var wire 16 &- a [15:0] $end
$var wire 16 '- b [15:0] $end
$var wire 1 % clk $end
$var wire 1 X start $end
$var wire 15 (- quantized_result_2cmp [14:0] $end
$var wire 15 )- quantized_result [14:0] $end
$var wire 16 *- q_result [15:0] $end
$var wire 1 +- overflow $end
$var wire 2 ,- nextState [1:0] $end
$var wire 16 -- multiplier [15:0] $end
$var wire 16 .- multiplicand [15:0] $end
$var wire 32 /- f_result [31:0] $end
$var wire 1 0- busy $end
$var wire 16 1- b_2cmp [15:0] $end
$var wire 16 2- a_2cmp [15:0] $end
$var parameter 32 3- N $end
$var parameter 32 4- Q $end
$var parameter 2 5- STATE_0 $end
$var parameter 2 6- STATE_1 $end
$var reg 2 7- state [1:0] $end
$upscope $end
$scope module s1 $end
$var wire 16 8- a [15:0] $end
$var wire 16 9- b [15:0] $end
$var wire 1 :- clk $end
$var wire 1 ;- rst $end
$var wire 1 b, y $end
$var wire 4 <- int_b [15:12] $end
$var wire 4 =- int_a [15:12] $end
$var wire 12 >- frac_b [11:0] $end
$var wire 12 ?- frac_a [11:0] $end
$var parameter 32 @- N $end
$var parameter 32 A- Q $end
$upscope $end
$scope module s2 $end
$var wire 16 B- a [15:0] $end
$var wire 16 C- b [15:0] $end
$var wire 1 D- clk $end
$var wire 1 E- rst $end
$var wire 1 a, y $end
$var wire 4 F- int_b [15:12] $end
$var wire 4 G- int_a [15:12] $end
$var wire 12 H- frac_b [11:0] $end
$var wire 12 I- frac_a [11:0] $end
$var parameter 32 J- N $end
$var parameter 32 K- Q $end
$upscope $end
$scope module s3 $end
$var wire 16 L- a [15:0] $end
$var wire 16 M- b [15:0] $end
$var wire 1 N- clk $end
$var wire 1 O- rst $end
$var wire 1 `, y $end
$var wire 4 P- int_b [15:12] $end
$var wire 4 Q- int_a [15:12] $end
$var wire 12 R- frac_b [11:0] $end
$var wire 12 S- frac_a [11:0] $end
$var parameter 32 T- N $end
$var parameter 32 U- Q $end
$upscope $end
$scope module s4 $end
$var wire 16 V- a [15:0] $end
$var wire 16 W- b [15:0] $end
$var wire 1 X- clk $end
$var wire 1 Y- rst $end
$var wire 1 _, y $end
$var wire 4 Z- int_b [15:12] $end
$var wire 4 [- int_a [15:12] $end
$var wire 12 \- frac_b [11:0] $end
$var wire 12 ]- frac_a [11:0] $end
$var parameter 32 ^- N $end
$var parameter 32 _- Q $end
$upscope $end
$scope module s5 $end
$var wire 16 `- a [15:0] $end
$var wire 16 a- b [15:0] $end
$var wire 1 b- clk $end
$var wire 1 c- rst $end
$var wire 1 ^, y $end
$var wire 4 d- int_b [15:12] $end
$var wire 4 e- int_a [15:12] $end
$var wire 12 f- frac_b [11:0] $end
$var wire 12 g- frac_a [11:0] $end
$var parameter 32 h- N $end
$var parameter 32 i- Q $end
$upscope $end
$scope module s6 $end
$var wire 16 j- a [15:0] $end
$var wire 16 k- b [15:0] $end
$var wire 1 l- clk $end
$var wire 1 m- rst $end
$var wire 1 ], y $end
$var wire 4 n- int_b [15:12] $end
$var wire 4 o- int_a [15:12] $end
$var wire 12 p- frac_b [11:0] $end
$var wire 12 q- frac_a [11:0] $end
$var parameter 32 r- N $end
$var parameter 32 s- Q $end
$upscope $end
$scope module s7 $end
$var wire 16 t- a [15:0] $end
$var wire 16 u- b [15:0] $end
$var wire 1 v- clk $end
$var wire 1 w- rst $end
$var wire 1 \, y $end
$var wire 4 x- int_b [15:12] $end
$var wire 4 y- int_a [15:12] $end
$var wire 12 z- frac_b [11:0] $end
$var wire 12 {- frac_a [11:0] $end
$var parameter 32 |- N $end
$var parameter 32 }- Q $end
$upscope $end
$scope module s8 $end
$var wire 16 ~- a [15:0] $end
$var wire 16 !. b [15:0] $end
$var wire 1 ". clk $end
$var wire 1 #. rst $end
$var wire 1 [, y $end
$var wire 4 $. int_b [15:12] $end
$var wire 4 %. int_a [15:12] $end
$var wire 12 &. frac_b [11:0] $end
$var wire 12 '. frac_a [11:0] $end
$var parameter 32 (. N $end
$var parameter 32 ). Q $end
$upscope $end
$scope module s9 $end
$var wire 16 *. a [15:0] $end
$var wire 16 +. b [15:0] $end
$var wire 1 ,. clk $end
$var wire 1 -. rst $end
$var wire 1 Z, y $end
$var wire 4 .. int_b [15:12] $end
$var wire 4 /. int_a [15:12] $end
$var wire 12 0. frac_b [11:0] $end
$var wire 12 1. frac_a [11:0] $end
$var parameter 32 2. N $end
$var parameter 32 3. Q $end
$upscope $end
$upscope $end
$scope module sqrt_1 $end
$var wire 1 % clk $end
$var wire 16 4. rad [15:0] $end
$var wire 1 W start $end
$var parameter 32 5. FBITS $end
$var parameter 32 6. ITER $end
$var parameter 32 7. WIDTH $end
$var reg 18 8. ac [17:0] $end
$var reg 18 9. ac_next [17:0] $end
$var reg 1 e busy $end
$var reg 4 :. i [3:0] $end
$var reg 16 ;. q [15:0] $end
$var reg 16 <. q_next [15:0] $end
$var reg 16 =. rem [15:0] $end
$var reg 16 >. root [15:0] $end
$var reg 18 ?. test_res [17:0] $end
$var reg 1 @. valid $end
$var reg 16 A. x [15:0] $end
$var reg 16 B. x_next [15:0] $end
$upscope $end
$scope module sqrt_2 $end
$var wire 1 % clk $end
$var wire 16 C. rad [15:0] $end
$var wire 1 W start $end
$var parameter 32 D. FBITS $end
$var parameter 32 E. ITER $end
$var parameter 32 F. WIDTH $end
$var reg 18 G. ac [17:0] $end
$var reg 18 H. ac_next [17:0] $end
$var reg 1 d busy $end
$var reg 4 I. i [3:0] $end
$var reg 16 J. q [15:0] $end
$var reg 16 K. q_next [15:0] $end
$var reg 16 L. rem [15:0] $end
$var reg 16 M. root [15:0] $end
$var reg 18 N. test_res [17:0] $end
$var reg 1 O. valid $end
$var reg 16 P. x [15:0] $end
$var reg 16 Q. x_next [15:0] $end
$upscope $end
$scope module sum_1 $end
$var wire 16 R. in1 [15:0] $end
$var wire 16 S. in2 [15:0] $end
$var wire 16 T. in3 [15:0] $end
$var wire 16 U. in4 [15:0] $end
$var wire 16 V. in5 [15:0] $end
$var wire 16 W. in6 [15:0] $end
$var wire 16 X. in7 [15:0] $end
$var wire 16 Y. in8 [15:0] $end
$var wire 16 Z. in9 [15:0] $end
$var wire 16 [. out [15:0] $end
$var parameter 32 \. WIDTH $end
$upscope $end
$scope module sum_2 $end
$var wire 16 ]. in1 [15:0] $end
$var wire 16 ^. in2 [15:0] $end
$var wire 16 _. in3 [15:0] $end
$var wire 16 `. in4 [15:0] $end
$var wire 16 a. in5 [15:0] $end
$var wire 16 b. in6 [15:0] $end
$var wire 16 c. in7 [15:0] $end
$var wire 16 d. in8 [15:0] $end
$var wire 16 e. in9 [15:0] $end
$var wire 16 f. out [15:0] $end
$var parameter 32 g. WIDTH $end
$upscope $end
$scope module sum_3 $end
$var wire 16 h. in1 [15:0] $end
$var wire 16 i. in2 [15:0] $end
$var wire 16 j. in3 [15:0] $end
$var wire 16 k. in4 [15:0] $end
$var wire 16 l. in5 [15:0] $end
$var wire 16 m. in6 [15:0] $end
$var wire 16 n. in7 [15:0] $end
$var wire 16 o. in8 [15:0] $end
$var wire 16 p. in9 [15:0] $end
$var wire 16 q. out [15:0] $end
$var parameter 32 r. WIDTH $end
$upscope $end
$scope module sum_4 $end
$var wire 16 s. in1 [15:0] $end
$var wire 16 t. in2 [15:0] $end
$var wire 16 u. in3 [15:0] $end
$var wire 16 v. in4 [15:0] $end
$var wire 16 w. in5 [15:0] $end
$var wire 16 x. in6 [15:0] $end
$var wire 16 y. in7 [15:0] $end
$var wire 16 z. in8 [15:0] $end
$var wire 16 {. in9 [15:0] $end
$var wire 16 |. out [15:0] $end
$var parameter 32 }. WIDTH $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b10000 }.
b10000 r.
b10000 g.
b10000 \.
b10000 F.
b1110 E.
b1100 D.
b10000 7.
b1110 6.
b1100 5.
b1100 3.
b10000 2.
b1100 ).
b10000 (.
b1100 }-
b10000 |-
b1100 s-
b10000 r-
b1100 i-
b10000 h-
b1100 _-
b10000 ^-
b1100 U-
b10000 T-
b1100 K-
b10000 J-
b1100 A-
b10000 @-
b1 6-
b0 5-
b1100 4-
b10000 3-
b111111101000 $-
b111110011001 #-
b111001011110 "-
b101011000001 !-
b10100111110 ~,
b110100001 },
b1100110 |,
b10111 {,
b10010110 z,
b111111010 y,
b10110101010 x,
b101100010111 w,
b101100010111 v,
b10110101010 u,
b111111010 t,
b10010110 s,
b110000000000000 r,
b100100000000000 q,
b11000000000000 p,
b1100000000000 o,
b0 n,
b1110100000000000 m,
b1101000000000000 l,
b1011100000000000 k,
b1010000000000000 j,
1i,
0h,
b1100 g,
b10000 f,
b1100 V,
b10000 U,
b1100 L,
b10000 K,
b1100 B,
b10000 A,
b1100 8,
b10000 7,
b1100 .,
b10000 -,
b1100 $,
b10000 #,
b1100 x+
b10000 w+
b1100 n+
b10000 m+
b1100 d+
b10000 c+
b1 Y+
b0 X+
b1100 W+
b10000 V+
b111111101000 G+
b111110011001 F+
b111001011110 E+
b101011000001 D+
b10100111110 C+
b110100001 B+
b1100110 A+
b10111 @+
b10010110 ?+
b111111010 >+
b10110101010 =+
b101100010111 <+
b101100010111 ;+
b10110101010 :+
b111111010 9+
b10010110 8+
b110000000000000 7+
b100100000000000 6+
b11000000000000 5+
b1100000000000 4+
b0 3+
b1110100000000000 2+
b1101000000000000 1+
b1011100000000000 0+
b1010000000000000 /+
1.+
0-+
b1100 ,+
b10000 ++
b1 x*
b0 w*
b1100 v*
b10000 u*
b1 g*
b0 f*
b1100 e*
b10000 d*
b1 V*
b0 U*
b1100 T*
b10000 S*
b1 E*
b0 D*
b1100 C*
b10000 B*
b1 4*
b0 3*
b1100 2*
b10000 1*
b1 #*
b0 "*
b1100 !*
b10000 ~)
b1 p)
b0 o)
b1100 n)
b10000 m)
b1 _)
b0 ^)
b1100 ])
b10000 \)
b1 N)
b0 M)
b1100 L)
b10000 K)
b1 =)
b0 <)
b1100 ;)
b10000 :)
b1 ,)
b0 +)
b1100 *)
b10000 ))
b1100 z(
b10000 y(
b1 S(
b0 R(
b1100 Q(
b10000 P(
b1 B(
b0 A(
b1100 @(
b10000 ?(
b1 1(
b0 0(
b1100 /(
b10000 .(
b1 ~'
b0 }'
b1100 |'
b10000 {'
b1 m'
b0 l'
b1100 k'
b10000 j'
b1 \'
b0 ['
b1100 Z'
b10000 Y'
b1 K'
b0 J'
b1100 I'
b10000 H'
b1 :'
b0 9'
b1100 8'
b10000 7'
b1 )'
b0 ('
b1100 ''
b10000 &'
b1100 w&
b10000 v&
b1 P&
b0 O&
b1100 N&
b10000 M&
b1 ?&
b0 >&
b1100 =&
b10000 <&
b1 .&
b0 -&
b1100 ,&
b10000 +&
b1 {%
b0 z%
b1100 y%
b10000 x%
b1 j%
b0 i%
b1100 h%
b10000 g%
b1 Y%
b0 X%
b1100 W%
b10000 V%
b1 H%
b0 G%
b1100 F%
b10000 E%
b1 7%
b0 6%
b1100 5%
b10000 4%
b1 &%
b0 %%
b1100 $%
b10000 #%
b1100 t$
b10000 s$
b1 M$
b0 L$
b1100 K$
b10000 J$
b1 <$
b0 ;$
b1100 :$
b10000 9$
b1 +$
b0 *$
b1100 )$
b10000 ($
b1 x#
b0 w#
b1100 v#
b10000 u#
b1 g#
b0 f#
b1100 e#
b10000 d#
b1 V#
b0 U#
b1100 T#
b10000 S#
b1 E#
b0 D#
b1100 C#
b10000 B#
b1 4#
b0 3#
b1100 2#
b10000 1#
b1 ##
b0 "#
b1100 !#
b10000 ~"
b1100 q"
b10000 p"
b10000 J"
b1010000110 I"
b1111101001111001 H"
b1010101000 G"
b1111111011011000 F"
b110111010101 E"
b1111111010010101 D"
b1111111100111101 C"
b1111111111000011 B"
b101010011 A"
b1100001 @"
b1111111101101101 ?"
b101001 >"
b10110000 ="
b1111111110100101 <"
b1111111101100010 ;"
b1111111110100100 :"
b10110011 9"
b11101000 8"
b100010011111 7"
b1111110011 6"
b1111110101100100 5"
b10000011011000 4"
b11001010010 3"
b1111101011010111 2"
b10010011 1"
b110010 0"
b1111111101100001 /"
b1111111110111000 ."
b10010101 -"
b10 ,"
b1111111111110010 +"
b1111111110110111 *"
b10010101 )"
b1111111111101101 ("
b1111111111101111 '"
b111110 &"
b1000 %"
b111 $"
b110 #"
b101 ""
b100 !"
b11 ~
b10 }
b1 |
b0 {
b1001 z
b1111010000101110 y
b1001010111010 x
b1111010111111010 w
b1111000101100101 v
b1111001000101101 u
b1111001000101101 t
b10000 $
b1001 #
$end
#0
$dumpvars
bx |.
bx {.
bx z.
bx y.
bx x.
bx w.
bx v.
bx u.
bx t.
bx s.
bx q.
bx p.
bx o.
bx n.
bx m.
bx l.
bx k.
bx j.
bx i.
bx h.
bx f.
bx e.
bx d.
bx c.
bx b.
bx a.
bx `.
bx _.
bx ^.
bx ].
bx [.
bx Z.
bx Y.
bx X.
bx W.
bx V.
bx U.
bx T.
bx S.
bx R.
bx Q.
bx P.
xO.
bx N.
bx M.
bx L.
bx K.
bx J.
bx I.
bx H.
bx G.
bx C.
bx B.
bx A.
x@.
bx ?.
bx >.
bx =.
bx <.
bx ;.
bx :.
bx 9.
bx 8.
bx 4.
bx 1.
b0 0.
bx /.
b110 ..
z-.
z,.
b110000000000000 +.
bx *.
bx '.
b100000000000 &.
bx %.
b100 $.
z#.
z".
b100100000000000 !.
bx ~-
bx {-
b0 z-
bx y-
b11 x-
zw-
zv-
b11000000000000 u-
bx t-
bx q-
b100000000000 p-
bx o-
b1 n-
zm-
zl-
b1100000000000 k-
bx j-
bx g-
b0 f-
bx e-
b0 d-
zc-
zb-
b0 a-
bx `-
bx ]-
b100000000000 \-
bx [-
b1110 Z-
zY-
zX-
b1110100000000000 W-
bx V-
bx S-
b0 R-
bx Q-
b1101 P-
zO-
zN-
b1101000000000000 M-
bx L-
bx I-
b100000000000 H-
bx G-
b1011 F-
zE-
zD-
b1011100000000000 C-
bx B-
bx ?-
b0 >-
bx =-
b1010 <-
z;-
z:-
b1010000000000000 9-
bx 8-
bx 7-
bx 2-
bx 1-
x0-
bx /-
bx .-
bx --
bx ,-
x+-
bx *-
bx )-
bx (-
bx '-
bx &-
x%-
bx e,
xd,
bx c,
xb,
xa,
x`,
x_,
x^,
x],
x\,
x[,
xZ,
bx Y,
bx X,
bx W,
bx T,
b0 S,
bx R,
b110 Q,
zP,
zO,
b110000000000000 N,
bx M,
bx J,
b100000000000 I,
bx H,
b100 G,
zF,
zE,
b100100000000000 D,
bx C,
bx @,
b0 ?,
bx >,
b11 =,
z<,
z;,
b11000000000000 :,
bx 9,
bx 6,
b100000000000 5,
bx 4,
b1 3,
z2,
z1,
b1100000000000 0,
bx /,
bx ,,
b0 +,
bx *,
b0 ),
z(,
z',
b0 &,
bx %,
bx ",
b100000000000 !,
bx ~+
b1110 }+
z|+
z{+
b1110100000000000 z+
bx y+
bx v+
b0 u+
bx t+
b1101 s+
zr+
zq+
b1101000000000000 p+
bx o+
bx l+
b100000000000 k+
bx j+
b1011 i+
zh+
zg+
b1011100000000000 f+
bx e+
bx b+
b0 a+
bx `+
b1010 _+
z^+
z]+
b1010000000000000 \+
bx [+
bx Z+
bx U+
bx T+
xS+
bx R+
bx Q+
bx P+
bx O+
xN+
bx M+
bx L+
bx K+
bx J+
bx I+
xH+
bx *+
x)+
bx (+
x'+
x&+
x%+
x$+
x#+
x"+
x!+
x~*
x}*
bx |*
bx {*
bx z*
bx y*
bx t*
bx s*
bx r*
bx q*
bx p*
bx o*
bx n*
xm*
bx l*
bx k*
bx j*
b1111010000101110 i*
bx h*
bx c*
bx b*
bx a*
bx `*
bx _*
bx ^*
bx ]*
x\*
bx [*
bx Z*
bx Y*
b1001010111010 X*
bx W*
bx R*
bx Q*
bx P*
bx O*
bx N*
bx M*
xL*
bx K*
bx J*
bx I*
b100010011111 H*
b0x000000000000 G*
bx F*
bx A*
bx @*
bx ?*
bx >*
bx =*
bx <*
x;*
bx :*
bx 9*
bx 8*
b1111110101100100 7*
b0x000000000000 6*
bx 5*
bx 0*
bx /*
bx .*
bx -*
bx ,*
bx +*
x**
bx )*
bx (*
bx '*
b11001010010 &*
b0x000000000000 %*
bx $*
bx })
bx |)
bx {)
bx z)
bx y)
bx x)
xw)
bx v)
bx u)
bx t)
b10010011 s)
b0x000000000000 r)
bx q)
bx l)
bx k)
bx j)
bx i)
bx h)
bx g)
xf)
bx e)
bx d)
bx c)
b1111111101100001 b)
b0x000000000000 a)
bx `)
bx [)
bx Z)
bx Y)
bx X)
bx W)
bx V)
xU)
bx T)
bx S)
bx R)
b10010101 Q)
b0x000000000000 P)
bx O)
bx J)
bx I)
bx H)
bx G)
bx F)
bx E)
xD)
bx C)
bx B)
bx A)
b1111111111110010 @)
b0x000000000000 ?)
bx >)
bx 9)
bx 8)
bx 7)
bx 6)
bx 5)
bx 4)
x3)
bx 2)
bx 1)
bx 0)
b10010101 /)
b0x000000000000 .)
bx -)
bx ()
bx ')
bx &)
bx %)
bx $)
bx #)
x")
bx !)
bx ~(
bx }(
b1111111111101111 |(
b0x000000000000 {(
xx(
xw(
xv(
xu(
xt(
xs(
xr(
xq(
xp(
bx o(
bx n(
bx m(
bx l(
bx k(
bx j(
bx i(
bx h(
bx g(
b100010011111 f(
b1111110101100100 e(
b11001010010 d(
b10010011 c(
b1111111101100001 b(
b10010101 a(
b1111111111110010 `(
b10010101 _(
b1111111111101111 ^(
b0x000000000000 ](
b0x000000000000 \(
b0x000000000000 [(
b0x000000000000 Z(
b0x000000000000 Y(
b0x000000000000 X(
b0x000000000000 W(
b0x000000000000 V(
b0x000000000000 U(
bx T(
bx O(
bx N(
bx M(
bx L(
bx K(
bx J(
xI(
bx H(
bx G(
bx F(
b1010000110 E(
b0x000000000000 D(
bx C(
bx >(
bx =(
bx <(
bx ;(
bx :(
bx 9(
x8(
bx 7(
bx 6(
bx 5(
b1010101000 4(
b0x000000000000 3(
bx 2(
bx -(
bx ,(
bx +(
bx *(
bx )(
bx ((
x'(
bx &(
bx %(
bx $(
b110111010101 #(
b0x000000000000 "(
bx !(
bx z'
bx y'
bx x'
bx w'
bx v'
bx u'
xt'
bx s'
bx r'
bx q'
b1111111100111101 p'
b0x000000000000 o'
bx n'
bx i'
bx h'
bx g'
bx f'
bx e'
bx d'
xc'
bx b'
bx a'
bx `'
b101010011 _'
b0x000000000000 ^'
bx ]'
bx X'
bx W'
bx V'
bx U'
bx T'
bx S'
xR'
bx Q'
bx P'
bx O'
b1111111101101101 N'
b0x000000000000 M'
bx L'
bx G'
bx F'
bx E'
bx D'
bx C'
bx B'
xA'
bx @'
bx ?'
bx >'
b10110000 ='
b0x000000000000 <'
bx ;'
bx 6'
bx 5'
bx 4'
bx 3'
bx 2'
bx 1'
x0'
bx /'
bx .'
bx -'
b1111111101100010 ,'
b0x000000000000 +'
bx *'
bx %'
bx $'
bx #'
bx "'
bx !'
bx ~&
x}&
bx |&
bx {&
bx z&
b10110011 y&
b0x000000000000 x&
xu&
xt&
xs&
xr&
xq&
xp&
xo&
xn&
xm&
bx l&
bx k&
bx j&
bx i&
bx h&
bx g&
bx f&
bx e&
bx d&
b1010000110 c&
b1010101000 b&
b110111010101 a&
b1111111100111101 `&
b101010011 _&
b1111111101101101 ^&
b10110000 ]&
b1111111101100010 \&
b10110011 [&
b0x000000000000 Z&
b0x000000000000 Y&
b0x000000000000 X&
b0x000000000000 W&
b0x000000000000 V&
b0x000000000000 U&
b0x000000000000 T&
b0x000000000000 S&
b0x000000000000 R&
bx Q&
bx L&
bx K&
bx J&
bx I&
bx H&
bx G&
xF&
bx E&
bx D&
bx C&
b1111101001111001 B&
b0x000000000000 A&
bx @&
bx ;&
bx :&
bx 9&
bx 8&
bx 7&
bx 6&
x5&
bx 4&
bx 3&
bx 2&
b1111111011011000 1&
b0x000000000000 0&
bx /&
bx *&
bx )&
bx (&
bx '&
bx &&
bx %&
x$&
bx #&
bx "&
bx !&
b1111111010010101 ~%
b0x000000000000 }%
bx |%
bx w%
bx v%
bx u%
bx t%
bx s%
bx r%
xq%
bx p%
bx o%
bx n%
b1111111111000011 m%
b0x000000000000 l%
bx k%
bx f%
bx e%
bx d%
bx c%
bx b%
bx a%
x`%
bx _%
bx ^%
bx ]%
b1100001 \%
b0x000000000000 [%
bx Z%
bx U%
bx T%
bx S%
bx R%
bx Q%
bx P%
xO%
bx N%
bx M%
bx L%
b101001 K%
b0x000000000000 J%
bx I%
bx D%
bx C%
bx B%
bx A%
bx @%
bx ?%
x>%
bx =%
bx <%
bx ;%
b1111111110100101 :%
b0x000000000000 9%
bx 8%
bx 3%
bx 2%
bx 1%
bx 0%
bx /%
bx .%
x-%
bx ,%
bx +%
bx *%
b1111111110100100 )%
b0x000000000000 (%
bx '%
bx "%
bx !%
bx ~$
bx }$
bx |$
bx {$
xz$
bx y$
bx x$
bx w$
b11101000 v$
b0x000000000000 u$
xr$
xq$
xp$
xo$
xn$
xm$
xl$
xk$
xj$
bx i$
bx h$
bx g$
bx f$
bx e$
bx d$
bx c$
bx b$
bx a$
b1111101001111001 `$
b1111111011011000 _$
b1111111010010101 ^$
b1111111111000011 ]$
b1100001 \$
b101001 [$
b1111111110100101 Z$
b1111111110100100 Y$
b11101000 X$
b0x000000000000 W$
b0x000000000000 V$
b0x000000000000 U$
b0x000000000000 T$
b0x000000000000 S$
b0x000000000000 R$
b0x000000000000 Q$
b0x000000000000 P$
b0x000000000000 O$
bx N$
bx I$
bx H$
bx G$
bx F$
bx E$
bx D$
xC$
bx B$
bx A$
bx @$
b1111110011 ?$
b0x000000000000 >$
bx =$
bx 8$
bx 7$
bx 6$
bx 5$
bx 4$
bx 3$
x2$
bx 1$
bx 0$
bx /$
b10000011011000 .$
b0x000000000000 -$
bx ,$
bx '$
bx &$
bx %$
bx $$
bx #$
bx "$
x!$
bx ~#
bx }#
bx |#
b1111101011010111 {#
b0x000000000000 z#
bx y#
bx t#
bx s#
bx r#
bx q#
bx p#
bx o#
xn#
bx m#
bx l#
bx k#
b110010 j#
b0x000000000000 i#
bx h#
bx c#
bx b#
bx a#
bx `#
bx _#
bx ^#
x]#
bx \#
bx [#
bx Z#
b1111111110111000 Y#
b0x000000000000 X#
bx W#
bx R#
bx Q#
bx P#
bx O#
bx N#
bx M#
xL#
bx K#
bx J#
bx I#
b10 H#
b0x000000000000 G#
bx F#
bx A#
bx @#
bx ?#
bx >#
bx =#
bx <#
x;#
bx :#
bx 9#
bx 8#
b1111111110110111 7#
b0x000000000000 6#
bx 5#
bx 0#
bx /#
bx .#
bx -#
bx ,#
bx +#
x*#
bx )#
bx (#
bx '#
b1111111111101101 &#
b0x000000000000 %#
bx $#
bx }"
bx |"
bx {"
bx z"
bx y"
bx x"
xw"
bx v"
bx u"
bx t"
b111110 s"
b0x000000000000 r"
xo"
xn"
xm"
xl"
xk"
xj"
xi"
xh"
xg"
bx f"
bx e"
bx d"
bx c"
bx b"
bx a"
bx `"
bx _"
bx ^"
b1111110011 ]"
b10000011011000 \"
b1111101011010111 ["
b110010 Z"
b1111111110111000 Y"
b10 X"
b1111111110110111 W"
b1111111111101101 V"
b111110 U"
b0x000000000000 T"
b0x000000000000 S"
b0x000000000000 R"
b0x000000000000 Q"
b0x000000000000 P"
b0x000000000000 O"
b0x000000000000 N"
b0x000000000000 M"
b0x000000000000 L"
b0 K"
bx s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
xk
xj
xi
xh
xg
xf
xe
xd
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
0[
0Z
0Y
0X
0W
b0x000000000000 V
b0x000000000000 U
b0x000000000000 T
b0x000000000000 S
b0x000000000000 R
b0x000000000000 Q
b0x000000000000 P
b0x000000000000 O
b0x000000000000 N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
b1 )
bx (
1'
bx &
0%
bx "
bx !
$end
#5000
1%
#10000
b1000000000000 V
b1000000000000 L"
b1000000000000 r"
b1000000000000 O$
b1000000000000 u$
b1000000000000 R&
b1000000000000 x&
b1000000000000 U(
b1000000000000 {(
b1000000000000 U
b1000000000000 M"
b1000000000000 %#
b1000000000000 P$
b1000000000000 (%
b1000000000000 S&
b1000000000000 +'
b1000000000000 V(
b1000000000000 .)
b1000000000000 T
b1000000000000 N"
b1000000000000 6#
b1000000000000 Q$
b1000000000000 9%
b1000000000000 T&
b1000000000000 <'
b1000000000000 W(
b1000000000000 ?)
b1000000000000 S
b1000000000000 O"
b1000000000000 G#
b1000000000000 R$
b1000000000000 J%
b1000000000000 U&
b1000000000000 M'
b1000000000000 X(
b1000000000000 P)
b0 R
b0 P"
b0 X#
b0 S$
b0 [%
b0 V&
b0 ^'
b0 Y(
b0 a)
b1000000000000 Q
b1000000000000 Q"
b1000000000000 i#
b1000000000000 T$
b1000000000000 l%
b1000000000000 W&
b1000000000000 o'
b1000000000000 Z(
b1000000000000 r)
b1000000000000 P
b1000000000000 R"
b1000000000000 z#
b1000000000000 U$
b1000000000000 }%
b1000000000000 X&
b1000000000000 "(
b1000000000000 [(
b1000000000000 %*
b1000000000000 O
b1000000000000 S"
b1000000000000 -$
b1000000000000 V$
b1000000000000 0&
b1000000000000 Y&
b1000000000000 3(
b1000000000000 \(
b1000000000000 6*
b0 N
b0 T"
b0 >$
b0 W$
b0 A&
b0 Z&
b0 D(
b0 ](
b0 G*
0%
0'
b11101111 &
b11101111 (
#15000
1Y
b10 )
b1 K"
1%
#20000
0%
#25000
b10011000000000000 .#
b1001001000000000000 ?#
b0 a#
b10100101001000000000000 %$
b1011100000000000000 1%
b1011011000000000000 B%
b111101000000000000 u%
b101101011000000000000 (&
b100101000000000000000 9&
b0 J&
b10011110000000000000 4'
b10010011000000000000 V'
b11000011000000000000 x'
b10001000000000000 &)
b1110000000000000 H)
b0 j)
b1010011100000000000000 ?*
b111110000000000000 {"
b1000000000010011 ,#
b1000000001001001 =#
b10000000000000 P#
b1000000001001000 _#
b110010000000000000 r#
b1000010100101001 #$
b10000011011000000000000000 6$
1i
b0 G$
b11101000000000000000 ~$
b1000000001011100 /%
b1000000001011011 @%
b101001000000000000 S%
b0 d%
b1000000000111101 s%
b1000000101101011 &&
b1000000100101000 7&
1h
b1000010110000111 H&
b10110011000000000000 #'
b1000000010011110 2'
b10110000000000000000 E'
b1000000010010011 T'
b0 g'
b1000000011000011 v'
b110111010101000000000000 +(
b1010101000000000000000 <(
1g
b0 M(
b1000000000010001 $)
b10010101000000000000 7)
b1000000000001110 F)
b10010101000000000000 Y)
b1000000010011111 h)
b10010011000000000000 {)
b11001010010000000000000 .*
b1000001010011100 =*
1f
b0 P*
1o"
1n"
1m"
1l"
1k"
1j"
1i"
1h"
1g"
1r$
1q$
1p$
1o$
1n$
1m$
1l$
1k$
1j$
1u&
1t&
1s&
1r&
1q&
1p&
1o&
1n&
1m&
1x(
1w(
1v(
1u(
1t(
1s(
1r(
1q(
1p(
b11 )
0Y
1X
b1 x"
b111000000000000 }"
b111111111000010 |"
b1000000000000 z"
b111110 y"
b1 +#
b111000000000000 0#
b1000000000010011 /#
b1000000000000 -#
b1 <#
b111000000000000 A#
b1000000001001001 @#
b1000000000000 >#
b1 M#
b111000000000000 R#
b111111111111110 Q#
b1000000000000 O#
b10 N#
b1 ^#
b0 c#
b1000000001001000 b#
b0 `#
b1 o#
b111000000000000 t#
b111111111001110 s#
b1000000000000 q#
b110010 p#
b1 "$
b111000000000000 '$
b1000010100101001 &$
b1000000000000 $$
b1 3$
b111000000000000 8$
b101111100101000 7$
b1000000000000 5$
b10000011011000 4$
b1 D$
b0 I$
b111110000001101 H$
b0 F$
b1111110011 E$
b1 {$
b111000000000000 "%
b111111100011000 !%
b1000000000000 }$
b11101000 |$
b1 .%
b111000000000000 3%
b1000000001011100 2%
b1000000000000 0%
b1 ?%
b111000000000000 D%
b1000000001011011 C%
b1000000000000 A%
b1 P%
b111000000000000 U%
b111111111010111 T%
b1000000000000 R%
b101001 Q%
b1 a%
b0 f%
b111111110011111 e%
b0 c%
b1100001 b%
b1 r%
b111000000000000 w%
b1000000000111101 v%
b1000000000000 t%
b1 %&
b111000000000000 *&
b1000000101101011 )&
b1000000000000 '&
b1 6&
b111000000000000 ;&
b1000000100101000 :&
b1000000000000 8&
b1 G&
b0 L&
b1000010110000111 K&
b0 I&
b1 ~&
b111000000000000 %'
b111111101001101 $'
b1000000000000 "'
b10110011 !'
b1 1'
b111000000000000 6'
b1000000010011110 5'
b1000000000000 3'
b1 B'
b111000000000000 G'
b111111101010000 F'
b1000000000000 D'
b10110000 C'
b1 S'
b111000000000000 X'
b1000000010010011 W'
b1000000000000 U'
b1 d'
b0 i'
b111111010101101 h'
b0 f'
b101010011 e'
b1 u'
b111000000000000 z'
b1000000011000011 y'
b1000000000000 w'
b1 ((
b111000000000000 -(
b111001000101011 ,(
b1000000000000 *(
b110111010101 )(
b1 9(
b111000000000000 >(
b111110101011000 =(
b1000000000000 ;(
b1010101000 :(
b1 J(
b0 O(
b111110101111010 N(
b0 L(
b1010000110 K(
b1 #)
b111000000000000 ()
b1000000000010001 ')
b1000000000000 %)
b1 4)
b111000000000000 9)
b111111101101011 8)
b1000000000000 6)
b10010101 5)
b1 E)
b111000000000000 J)
b1000000000001110 I)
b1000000000000 G)
b1 V)
b111000000000000 [)
b111111101101011 Z)
b1000000000000 X)
b10010101 W)
b1 g)
b0 l)
b1000000010011111 k)
b0 i)
b1 x)
b111000000000000 })
b111111101101101 |)
b1000000000000 z)
b10010011 y)
b1 +*
b111000000000000 0*
b111100110101110 /*
b1000000000000 -*
b11001010010 ,*
b1 <*
b111000000000000 A*
b1000001010011100 @*
b1000000000000 >*
b1 M*
b0 R*
b111011101100001 Q*
b0 O*
b100010011111 N*
b0 $#
b0 5#
b0 F#
b0 W#
b0 h#
b0 y#
b0 ,$
b0 =$
b0 N$
b0 '%
b0 8%
b0 I%
b0 Z%
b0 k%
b0 |%
b0 /&
b0 @&
b0 Q&
b0 *'
b0 ;'
b0 L'
b0 ]'
b0 n'
b0 !(
b0 2(
b0 C(
b0 T(
b0 -)
b0 >)
b0 O)
b0 `)
b0 q)
b0 $*
b0 5*
b0 F*
b0 W*
b10 K"
1%
#30000
0%
#35000
b10110010111011100011110 R+
b1111110110111001100110 /-
1b,
1a,
1`,
1_,
1^,
0],
0\,
0[,
0Z,
1'+
1&+
1%+
1$+
b1001000100010001 P+
0#+
0"+
0!+
0~*
0}*
b10111100110 --
b111101000011010 1-
b1001000100010001 T+
b0 =-
b10111100110 ?-
b0 G-
b10111100110 I-
b0 Q-
b10111100110 S-
b0 [-
b10111100110 ]-
b0 e-
b10111100110 g-
b0 o-
b10111100110 q-
b0 y-
b10111100110 {-
b0 %.
b10111100110 '.
b0 /.
b10111100110 1.
b1110 `+
b111011101111 b+
b1110 j+
b111011101111 l+
b1110 t+
b111011101111 v+
b1110 ~+
b111011101111 ",
b1110 *,
b111011101111 ,,
b1110 4,
b111011101111 6,
b1110 >,
b111011101111 @,
b1110 H,
b111011101111 J,
b1110 R,
b111011101111 T,
b101011000001 .-
b10100111110 Q+
b1111011110000001 a
b10111100110 ]
b10111100110 W,
b10111100110 '-
b10111100110 8-
b10111100110 B-
b10111100110 L-
b10111100110 V-
b10111100110 `-
b10111100110 j-
b10111100110 t-
b10111100110 ~-
b10111100110 *.
b1110111011101111 _
b1110111011101111 z*
b1110111011101111 J+
b1110111011101111 [+
b1110111011101111 e+
b1110111011101111 o+
b1110111011101111 y+
b1110111011101111 %,
b1110111011101111 /,
b1110111011101111 9,
b1110111011101111 C,
b1110111011101111 M,
b110111110010 c
b111010100111111 2-
b111101011000010 U+
b10101010100 `
b10101010100 q.
b111111101100 \
b111111101100 |.
b1111110110001010 ^
b1111110110001010 f.
b1101111000101 b
b1101111000101 [.
0f
0g
0h
0i
b101100010111 e,
b101011000001 Y,
b101011000001 &-
10-
b101100010111 *+
b10100111110 |*
b10100111110 I+
1S+
0p(
b0 I*
0q(
b111110101100100 8*
0r(
b111100110101110 '*
0s(
b111111101101101 t)
0t(
b0 c)
0u(
b111111101101011 R)
0v(
b111111111110010 A)
0w(
b111111101101011 0)
0x(
b111111111101111 }(
0m&
b0 F(
0n&
b111110101011000 5(
0o&
b111001000101011 $(
0p&
b111111100111101 q'
0q&
b0 `'
0r&
b111111101101101 O'
0s&
b111111101010000 >'
0t&
b111111101100010 -'
0u&
b111111101001101 z&
0j$
b0 C&
0k$
b111111011011000 2&
0l$
b111111010010101 !&
0m$
b111111111000011 n%
0n$
b0 ]%
0o$
b111111111010111 L%
0p$
b111111110100101 ;%
0q$
b111111110100100 *%
0r$
b111111100011000 w$
0g"
b0 @$
0h"
b101111100101000 /$
0i"
b111101011010111 |#
0j"
b111111111001110 k#
0k"
b0 Z#
0l"
b111111111111110 I#
0m"
b111111110110111 8#
0n"
b111111111101101 '#
0o"
b111111111000010 t"
1d,
b1 ,-
1)+
b1 O+
0L*
b0 J*
b0 <
b0 g(
b0 K*
b0 p.
0;*
b1010011100 9*
b1111110101100100 =
b1111110101100100 h(
b1111110101100100 :*
b1111110101100100 o.
0**
b11001010010 (*
b11001010010 >
b11001010010 i(
b11001010010 )*
b11001010010 n.
0w)
b10010011 u)
b10010011 ?
b10010011 j(
b10010011 v)
b10010011 m.
0f)
b0 d)
b0 @
b0 k(
b0 e)
b0 l.
0U)
b10010101 S)
b10010101 A
b10010101 l(
b10010101 T)
b10010101 k.
0D)
b1110 B)
b1111111111110010 B
b1111111111110010 m(
b1111111111110010 C)
b1111111111110010 j.
03)
b10010101 1)
b10010101 C
b10010101 n(
b10010101 2)
b10010101 i.
0")
b10001 ~(
b1111111111101111 D
b1111111111101111 o(
b1111111111101111 !)
b1111111111101111 h.
0I(
b0 G(
b0 *
b0 d&
b0 H(
b0 {.
08(
b1010101000 6(
b1010101000 +
b1010101000 e&
b1010101000 7(
b1010101000 z.
0'(
b110111010101 %(
b110111010101 ,
b110111010101 f&
b110111010101 &(
b110111010101 y.
0t'
b11000011 r'
b1111111100111101 -
b1111111100111101 g&
b1111111100111101 s'
b1111111100111101 x.
0c'
b0 a'
b0 .
b0 h&
b0 b'
b0 w.
0R'
b10010011 P'
b1111111101101101 /
b1111111101101101 i&
b1111111101101101 Q'
b1111111101101101 v.
0A'
b10110000 ?'
b10110000 0
b10110000 j&
b10110000 @'
b10110000 u.
00'
b10011110 .'
b1111111101100010 1
b1111111101100010 k&
b1111111101100010 /'
b1111111101100010 t.
0}&
b10110011 {&
b10110011 2
b10110011 l&
b10110011 |&
b10110011 s.
0F&
b0 D&
b0 3
b0 a$
b0 E&
b0 e.
05&
b100101000 3&
b1111111011011000 4
b1111111011011000 b$
b1111111011011000 4&
b1111111011011000 d.
0$&
b101101011 "&
b1111111010010101 5
b1111111010010101 c$
b1111111010010101 #&
b1111111010010101 c.
0q%
b111101 o%
b1111111111000011 6
b1111111111000011 d$
b1111111111000011 p%
b1111111111000011 b.
0`%
b0 ^%
b0 7
b0 e$
b0 _%
b0 a.
0O%
b101001 M%
b101001 8
b101001 f$
b101001 N%
b101001 `.
0>%
b1011011 <%
b1111111110100101 9
b1111111110100101 g$
b1111111110100101 =%
b1111111110100101 _.
0-%
b1011100 +%
b1111111110100100 :
b1111111110100100 h$
b1111111110100100 ,%
b1111111110100100 ^.
0z$
b11101000 x$
b11101000 ;
b11101000 i$
b11101000 y$
b11101000 ].
0C$
b0 A$
b0 E
b0 ^"
b0 B$
b0 Z.
02$
b10000011011000 0$
b10000011011000 F
b10000011011000 _"
b10000011011000 1$
b10000011011000 Y.
0!$
b10100101001 }#
b1111101011010111 G
b1111101011010111 `"
b1111101011010111 ~#
b1111101011010111 X.
0n#
b110010 l#
b110010 H
b110010 a"
b110010 m#
b110010 W.
0]#
b0 [#
b0 I
b0 b"
b0 \#
b0 V.
0L#
b10 J#
b10 J
b10 c"
b10 K#
b10 U.
0;#
b1001001 9#
b1111111110110111 K
b1111111110110111 d"
b1111111110110111 :#
b1111111110110111 T.
0*#
b10011 (#
b1111111111101101 L
b1111111111101101 e"
b1111111111101101 )#
b1111111111101101 S.
0w"
b111110 u"
b111110 M
b111110 f"
b111110 v"
b111110 R.
0%-
b0 7-
0H+
b0 Z+
b1 W*
b1 F*
b1 5*
b1 $*
b1 q)
b1 `)
b1 O)
b1 >)
b1 -)
b1 T(
b1 C(
b1 2(
b1 !(
b1 n'
b1 ]'
b1 L'
b1 ;'
b1 *'
b1 Q&
b1 @&
b1 /&
b1 |%
b1 k%
b1 Z%
b1 I%
b1 8%
b1 '%
b1 N$
b1 =$
b1 ,$
b1 y#
b1 h#
b1 W#
b1 F#
b1 5#
b1 $#
1%
#40000
0%
#45000
b100 )
0X
b11 K"
1%
#50000
0%
#55000
b10110000000 o
b10110000000 {*
b10110000000 4.
b111100001101 m
b111100001101 X,
b111100001101 C.
b101 )
00-
b111110000001010 (-
0S+
b111101001101001 K+
0+-
b1111110110 )-
b1111110110 c,
b1111110110 *-
0N+
b10110010111 L+
b1111101001101001 (+
b1111101001101001 M+
1%-
b1 7-
1H+
b1 Z+
b100 K"
1%
#60000
0%
#65000
b110 )
1W
b101 K"
1%
#70000
0%
#75000
b111 )
0W
b0 K.
b0 H.
b1111000011010000 Q.
b111111111111111111 N.
b0 <.
b0 9.
b101100000000000 B.
b111111111111111111 ?.
b0 G.
b11110000110100 P.
b0 J.
b0 I.
0O.
1d
b0 8.
b1011000000000 A.
b0 ;.
b0 :.
0@.
1e
b110 K"
1%
#80000
0%
#85000
b1 9.
b110000000000000 B.
b11 H.
b1100001101000000 Q.
b101100000000000 A.
b1 :.
b1111000011010000 P.
b1 I.
1%
#90000
0%
#95000
b1 K.
b1011 H.
b110100000000 Q.
b10 N.
b1 <.
b1000000000000000 B.
b0 ?.
b11 G.
b1100001101000000 P.
b10 I.
b1 8.
b110000000000000 A.
b10 :.
1%
#100000
0%
#105000
b10 <.
b110 9.
b0 B.
b111111111111111100 ?.
b11 K.
b11000 H.
b11010000000000 Q.
b110 N.
b1 ;.
b1000000000000000 A.
b11 :.
b1 J.
b1011 G.
b110100000000 P.
b11 I.
1%
#110000
0%
#115000
b111 K.
b101100 H.
b1101000000000000 Q.
b1011 N.
b100 <.
b11000 9.
b111111111111111101 ?.
b11 J.
b11000 G.
b11010000000000 P.
b100 I.
b10 ;.
b110 8.
b0 A.
b100 :.
1%
#120000
0%
#125000
b1001 <.
b11100 9.
b111 ?.
b1111 K.
b111111 H.
b100000000000000 Q.
b1111 N.
b100 ;.
b11000 8.
b101 :.
b111 J.
b101100 G.
b1101000000000000 P.
b101 I.
1%
#130000
0%
#135000
b11111 K.
b1001 H.
b0 Q.
b10 N.
b10010 <.
b1110000 9.
b111111111111110111 ?.
b1111 J.
b111111 G.
b100000000000000 P.
b110 I.
b1001 ;.
b11100 8.
b110 :.
1%
#140000
0%
#145000
b100101 <.
b10011100 9.
b100111 ?.
b111110 K.
b100100 H.
b111111111110001100 N.
b10010 ;.
b1110000 8.
b111 :.
b11111 J.
b1001 G.
b0 P.
b111 I.
1%
#150000
0%
#155000
b1111100 K.
b10010000 H.
b111111111100101011 N.
b1001011 <.
b11100 9.
b111 ?.
b111110 J.
b100100 G.
b1000 I.
b100101 ;.
b10011100 8.
b1000 :.
1%
#160000
0%
#165000
b10010110 <.
b1110000 9.
b111111111011101111 ?.
b11111000 K.
b1001000000 H.
b111111111010011111 N.
b1001011 ;.
b11100 8.
b1001 :.
b1111100 J.
b10010000 G.
b1001 I.
1%
#170000
0%
#175000
b111110000 K.
b100100000000 H.
b111111111001011111 N.
b100101100 <.
b111000000 9.
b111111111000010111 ?.
b11111000 J.
b1001000000 G.
b1010 I.
b10010110 ;.
b1110000 8.
b1010 :.
1%
#180000
0%
#185000
b1001011000 <.
b11100000000 9.
b111111110100001111 ?.
b1111100001 K.
b10011111100 H.
b100111111 N.
b100101100 ;.
b111000000 8.
b1011 :.
b111110000 J.
b100100000000 G.
b1011 I.
1%
#190000
0%
#195000
b11111000010 K.
b1001111110000 H.
b111111010101110111 N.
b10010110000 <.
b1110000000000 9.
b111111110110011111 ?.
b1111100001 J.
b10011111100 G.
b1100 I.
b1001011000 ;.
b11100000000 8.
b1100 :.
1%
#200000
0%
#205000
b100101100001 <.
b10010011111100 9.
b100100111111 ?.
b111110000100 K.
b100111111000000 H.
b111111010011100111 N.
b10010110000 ;.
b1110000000000 8.
b1101 :.
b11111000010 J.
b1001111110000 G.
b1101 I.
1%
#210000
0%
#215000
b1001111110000 L.
b111110000100 l
b111110000100 t*
b111110000100 M.
1O.
0d
b100100111111 =.
b100101100001 n
b100101100001 c*
b100101100001 >.
1@.
0e
1%
#220000
0%
#225000
b1000 )
1[
1Z
b111 K"
1%
#230000
0%
#235000
b0 )
b101101110110011001001000 q*
b1000101111010010 o*
b101011111010001001111010 `*
1j
1k
0[
0Z
b1 n*
b111000001111100 s*
b1000101111010010 r*
b111110000100 p*
b1 ]*
b111011010011111 b*
b110110101000110 a*
b100101100001 _*
b1001010111010 ^*
b0 y*
b0 h*
b1000 K"
1%
#240000
0%
#245000
b1110110000001011 !
b1110110000001011 q
b1100011101100 "
b1100011101100 s
0k
b111010100000110 Y*
0j
b111010010001010 j*
0\*
b101011111010 Z*
b101011111010 r
b101011111010 [*
0m*
b101101110110 k*
b1111010010001010 p
b1111010010001010 l*
b1 h*
b1 y*
1%
#250000
0%
#255000
b1 )
b0 K"
1%
#260000
0%
#265000
1Y
b10 )
b1 K"
1%
#270000
0%
#275000
1f
1g
1h
1i
1p(
1q(
1r(
1s(
1t(
1u(
1v(
1w(
1x(
1m&
1n&
1o&
1p&
1q&
1r&
1s&
1t&
1u&
1j$
1k$
1l$
1m$
1n$
1o$
1p$
1q$
1r$
1g"
1h"
1i"
1j"
1k"
1l"
1m"
1n"
1o"
b11 )
0Y
1X
b0 W*
b0 F*
b0 5*
b0 $*
b0 q)
b0 `)
b0 O)
b0 >)
b0 -)
b0 T(
b0 C(
b0 2(
b0 !(
b0 n'
b0 ]'
b0 L'
b0 ;'
b0 *'
b0 Q&
b0 @&
b0 /&
b0 |%
b0 k%
b0 Z%
b0 I%
b0 8%
b0 '%
b0 N$
b0 =$
b0 ,$
b0 y#
b0 h#
b0 W#
b0 F#
b0 5#
b0 $#
b10 K"
1%
#280000
0%
#285000
0i
0h
0g
0f
0o"
0n"
0m"
0l"
0k"
0j"
0i"
0h"
0g"
0r$
0q$
0p$
0o$
0n$
0m$
0l$
0k$
0j$
0u&
0t&
0s&
0r&
0q&
0p&
0o&
0n&
0m&
0x(
0w(
0v(
0u(
0t(
0s(
0r(
0q(
0p(
1S+
10-
b1 $#
b1 5#
b1 F#
b1 W#
b1 h#
b1 y#
b1 ,$
b1 =$
b1 N$
b1 '%
b1 8%
b1 I%
b1 Z%
b1 k%
b1 |%
b1 /&
b1 @&
b1 Q&
b1 *'
b1 ;'
b1 L'
b1 ]'
b1 n'
b1 !(
b1 2(
b1 C(
b1 T(
b1 -)
b1 >)
b1 O)
b1 `)
b1 q)
b1 $*
b1 5*
b1 F*
b1 W*
b0 Z+
0H+
b0 7-
0%-
1%
#290000
0%
#295000
b100 )
0X
b11 K"
1%
#300000
0%
#305000
b101 )
0S+
00-
b1 Z+
1H+
b1 7-
1%-
b100 K"
1%
#310000
0%
#315000
b110 )
1W
b101 K"
1%
#320000
0%
