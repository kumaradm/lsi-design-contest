$date
	Tue Dec 10 11:21:22 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_multiplier_fp_9x16_bit $end
$var wire 16 ! o9 [15:0] $end
$var wire 16 " o8 [15:0] $end
$var wire 16 # o7 [15:0] $end
$var wire 16 $ o6 [15:0] $end
$var wire 16 % o5 [15:0] $end
$var wire 16 & o4 [15:0] $end
$var wire 16 ' o3 [15:0] $end
$var wire 16 ( o2 [15:0] $end
$var wire 16 ) o1 [15:0] $end
$var wire 1 * busy $end
$var parameter 32 + N $end
$var reg 16 , a1 [15:0] $end
$var reg 16 - a2 [15:0] $end
$var reg 16 . a3 [15:0] $end
$var reg 16 / a4 [15:0] $end
$var reg 16 0 a5 [15:0] $end
$var reg 16 1 a6 [15:0] $end
$var reg 16 2 a7 [15:0] $end
$var reg 16 3 a8 [15:0] $end
$var reg 16 4 a9 [15:0] $end
$var reg 16 5 b1 [15:0] $end
$var reg 16 6 b2 [15:0] $end
$var reg 16 7 b3 [15:0] $end
$var reg 16 8 b4 [15:0] $end
$var reg 16 9 b5 [15:0] $end
$var reg 16 : b6 [15:0] $end
$var reg 16 ; b7 [15:0] $end
$var reg 16 < b8 [15:0] $end
$var reg 16 = b9 [15:0] $end
$var reg 1 > clk $end
$var reg 1 ? start $end
$scope module mult $end
$var wire 16 @ a1 [15:0] $end
$var wire 16 A a2 [15:0] $end
$var wire 16 B a3 [15:0] $end
$var wire 16 C a4 [15:0] $end
$var wire 16 D a5 [15:0] $end
$var wire 16 E a6 [15:0] $end
$var wire 16 F a7 [15:0] $end
$var wire 16 G a8 [15:0] $end
$var wire 16 H a9 [15:0] $end
$var wire 16 I b1 [15:0] $end
$var wire 16 J b2 [15:0] $end
$var wire 16 K b3 [15:0] $end
$var wire 16 L b4 [15:0] $end
$var wire 16 M b5 [15:0] $end
$var wire 16 N b6 [15:0] $end
$var wire 16 O b7 [15:0] $end
$var wire 16 P b8 [15:0] $end
$var wire 16 Q b9 [15:0] $end
$var wire 1 * busy $end
$var wire 1 > clk $end
$var wire 1 ? start $end
$var wire 16 R o9 [15:0] $end
$var wire 16 S o8 [15:0] $end
$var wire 16 T o7 [15:0] $end
$var wire 16 U o6 [15:0] $end
$var wire 16 V o5 [15:0] $end
$var wire 16 W o4 [15:0] $end
$var wire 16 X o3 [15:0] $end
$var wire 16 Y o2 [15:0] $end
$var wire 16 Z o1 [15:0] $end
$var wire 1 [ busy9 $end
$var wire 1 \ busy8 $end
$var wire 1 ] busy7 $end
$var wire 1 ^ busy6 $end
$var wire 1 _ busy5 $end
$var wire 1 ` busy4 $end
$var wire 1 a busy3 $end
$var wire 1 b busy2 $end
$var wire 1 c busy1 $end
$var parameter 32 d N $end
$var parameter 32 e Q $end
$scope module mult1 $end
$var wire 16 f a [15:0] $end
$var wire 16 g b [15:0] $end
$var wire 1 > clk $end
$var wire 1 ? start $end
$var wire 15 h quantized_result_2cmp [14:0] $end
$var wire 15 i quantized_result [14:0] $end
$var wire 16 j q_result [15:0] $end
$var wire 1 k overflow $end
$var wire 2 l nextState [1:0] $end
$var wire 16 m multiplier [15:0] $end
$var wire 16 n multiplicand [15:0] $end
$var wire 32 o f_result [31:0] $end
$var wire 1 c busy $end
$var wire 16 p b_2cmp [15:0] $end
$var wire 16 q a_2cmp [15:0] $end
$var parameter 32 r N $end
$var parameter 32 s Q $end
$var parameter 2 t STATE_0 $end
$var parameter 2 u STATE_1 $end
$var reg 2 v state [1:0] $end
$upscope $end
$scope module mult2 $end
$var wire 16 w a [15:0] $end
$var wire 16 x b [15:0] $end
$var wire 1 > clk $end
$var wire 1 ? start $end
$var wire 15 y quantized_result_2cmp [14:0] $end
$var wire 15 z quantized_result [14:0] $end
$var wire 16 { q_result [15:0] $end
$var wire 1 | overflow $end
$var wire 2 } nextState [1:0] $end
$var wire 16 ~ multiplier [15:0] $end
$var wire 16 !" multiplicand [15:0] $end
$var wire 32 "" f_result [31:0] $end
$var wire 1 b busy $end
$var wire 16 #" b_2cmp [15:0] $end
$var wire 16 $" a_2cmp [15:0] $end
$var parameter 32 %" N $end
$var parameter 32 &" Q $end
$var parameter 2 '" STATE_0 $end
$var parameter 2 (" STATE_1 $end
$var reg 2 )" state [1:0] $end
$upscope $end
$scope module mult3 $end
$var wire 16 *" a [15:0] $end
$var wire 16 +" b [15:0] $end
$var wire 1 > clk $end
$var wire 1 ? start $end
$var wire 15 ," quantized_result_2cmp [14:0] $end
$var wire 15 -" quantized_result [14:0] $end
$var wire 16 ." q_result [15:0] $end
$var wire 1 /" overflow $end
$var wire 2 0" nextState [1:0] $end
$var wire 16 1" multiplier [15:0] $end
$var wire 16 2" multiplicand [15:0] $end
$var wire 32 3" f_result [31:0] $end
$var wire 1 a busy $end
$var wire 16 4" b_2cmp [15:0] $end
$var wire 16 5" a_2cmp [15:0] $end
$var parameter 32 6" N $end
$var parameter 32 7" Q $end
$var parameter 2 8" STATE_0 $end
$var parameter 2 9" STATE_1 $end
$var reg 2 :" state [1:0] $end
$upscope $end
$scope module mult4 $end
$var wire 16 ;" a [15:0] $end
$var wire 16 <" b [15:0] $end
$var wire 1 > clk $end
$var wire 1 ? start $end
$var wire 15 =" quantized_result_2cmp [14:0] $end
$var wire 15 >" quantized_result [14:0] $end
$var wire 16 ?" q_result [15:0] $end
$var wire 1 @" overflow $end
$var wire 2 A" nextState [1:0] $end
$var wire 16 B" multiplier [15:0] $end
$var wire 16 C" multiplicand [15:0] $end
$var wire 32 D" f_result [31:0] $end
$var wire 1 ` busy $end
$var wire 16 E" b_2cmp [15:0] $end
$var wire 16 F" a_2cmp [15:0] $end
$var parameter 32 G" N $end
$var parameter 32 H" Q $end
$var parameter 2 I" STATE_0 $end
$var parameter 2 J" STATE_1 $end
$var reg 2 K" state [1:0] $end
$upscope $end
$scope module mult5 $end
$var wire 16 L" a [15:0] $end
$var wire 16 M" b [15:0] $end
$var wire 1 > clk $end
$var wire 1 ? start $end
$var wire 15 N" quantized_result_2cmp [14:0] $end
$var wire 15 O" quantized_result [14:0] $end
$var wire 16 P" q_result [15:0] $end
$var wire 1 Q" overflow $end
$var wire 2 R" nextState [1:0] $end
$var wire 16 S" multiplier [15:0] $end
$var wire 16 T" multiplicand [15:0] $end
$var wire 32 U" f_result [31:0] $end
$var wire 1 _ busy $end
$var wire 16 V" b_2cmp [15:0] $end
$var wire 16 W" a_2cmp [15:0] $end
$var parameter 32 X" N $end
$var parameter 32 Y" Q $end
$var parameter 2 Z" STATE_0 $end
$var parameter 2 [" STATE_1 $end
$var reg 2 \" state [1:0] $end
$upscope $end
$scope module mult6 $end
$var wire 16 ]" a [15:0] $end
$var wire 16 ^" b [15:0] $end
$var wire 1 > clk $end
$var wire 1 ? start $end
$var wire 15 _" quantized_result_2cmp [14:0] $end
$var wire 15 `" quantized_result [14:0] $end
$var wire 16 a" q_result [15:0] $end
$var wire 1 b" overflow $end
$var wire 2 c" nextState [1:0] $end
$var wire 16 d" multiplier [15:0] $end
$var wire 16 e" multiplicand [15:0] $end
$var wire 32 f" f_result [31:0] $end
$var wire 1 ^ busy $end
$var wire 16 g" b_2cmp [15:0] $end
$var wire 16 h" a_2cmp [15:0] $end
$var parameter 32 i" N $end
$var parameter 32 j" Q $end
$var parameter 2 k" STATE_0 $end
$var parameter 2 l" STATE_1 $end
$var reg 2 m" state [1:0] $end
$upscope $end
$scope module mult7 $end
$var wire 16 n" a [15:0] $end
$var wire 16 o" b [15:0] $end
$var wire 1 > clk $end
$var wire 1 ? start $end
$var wire 15 p" quantized_result_2cmp [14:0] $end
$var wire 15 q" quantized_result [14:0] $end
$var wire 16 r" q_result [15:0] $end
$var wire 1 s" overflow $end
$var wire 2 t" nextState [1:0] $end
$var wire 16 u" multiplier [15:0] $end
$var wire 16 v" multiplicand [15:0] $end
$var wire 32 w" f_result [31:0] $end
$var wire 1 ] busy $end
$var wire 16 x" b_2cmp [15:0] $end
$var wire 16 y" a_2cmp [15:0] $end
$var parameter 32 z" N $end
$var parameter 32 {" Q $end
$var parameter 2 |" STATE_0 $end
$var parameter 2 }" STATE_1 $end
$var reg 2 ~" state [1:0] $end
$upscope $end
$scope module mult8 $end
$var wire 16 !# a [15:0] $end
$var wire 16 "# b [15:0] $end
$var wire 1 > clk $end
$var wire 1 ? start $end
$var wire 15 ## quantized_result_2cmp [14:0] $end
$var wire 15 $# quantized_result [14:0] $end
$var wire 16 %# q_result [15:0] $end
$var wire 1 &# overflow $end
$var wire 2 '# nextState [1:0] $end
$var wire 16 (# multiplier [15:0] $end
$var wire 16 )# multiplicand [15:0] $end
$var wire 32 *# f_result [31:0] $end
$var wire 1 \ busy $end
$var wire 16 +# b_2cmp [15:0] $end
$var wire 16 ,# a_2cmp [15:0] $end
$var parameter 32 -# N $end
$var parameter 32 .# Q $end
$var parameter 2 /# STATE_0 $end
$var parameter 2 0# STATE_1 $end
$var reg 2 1# state [1:0] $end
$upscope $end
$scope module mult9 $end
$var wire 16 2# a [15:0] $end
$var wire 16 3# b [15:0] $end
$var wire 1 > clk $end
$var wire 1 ? start $end
$var wire 15 4# quantized_result_2cmp [14:0] $end
$var wire 15 5# quantized_result [14:0] $end
$var wire 16 6# q_result [15:0] $end
$var wire 1 7# overflow $end
$var wire 2 8# nextState [1:0] $end
$var wire 16 9# multiplier [15:0] $end
$var wire 16 :# multiplicand [15:0] $end
$var wire 32 ;# f_result [31:0] $end
$var wire 1 [ busy $end
$var wire 16 <# b_2cmp [15:0] $end
$var wire 16 =# a_2cmp [15:0] $end
$var parameter 32 ># N $end
$var parameter 32 ?# Q $end
$var parameter 2 @# STATE_0 $end
$var parameter 2 A# STATE_1 $end
$var reg 2 B# state [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1 A#
b0 @#
b1100 ?#
b10000 >#
b1 0#
b0 /#
b1100 .#
b10000 -#
b1 }"
b0 |"
b1100 {"
b10000 z"
b1 l"
b0 k"
b1100 j"
b10000 i"
b1 ["
b0 Z"
b1100 Y"
b10000 X"
b1 J"
b0 I"
b1100 H"
b10000 G"
b1 9"
b0 8"
b1100 7"
b10000 6"
b1 ("
b0 '"
b1100 &"
b10000 %"
b1 u
b0 t
b1100 s
b10000 r
b1100 e
b10000 d
b10000 +
$end
#0
$dumpvars
b0 B#
b101000000000000 =#
b110000000000000 <#
b110000000000000000000000000 ;#
b11000000000000 :#
b10000000000000 9#
b1 8#
07#
b110000000000000 6#
b110000000000000 5#
b10000000000000 4#
b10000000000000 3#
b11000000000000 2#
b0 1#
b101000000000000 ,#
b110000000000000 +#
b110000000000000000000000000 *#
b11000000000000 )#
b10000000000000 (#
b1 '#
0&#
b110000000000000 %#
b110000000000000 $#
b10000000000000 ##
b10000000000000 "#
b11000000000000 !#
b0 ~"
b101000000000000 y"
b110000000000000 x"
b110000000000000000000000000 w"
b11000000000000 v"
b10000000000000 u"
b1 t"
0s"
b110000000000000 r"
b110000000000000 q"
b10000000000000 p"
b10000000000000 o"
b11000000000000 n"
b0 m"
b101000000000000 h"
b110000000000000 g"
b110000000000000000000000000 f"
b11000000000000 e"
b10000000000000 d"
b1 c"
0b"
b110000000000000 a"
b110000000000000 `"
b10000000000000 _"
b10000000000000 ^"
b11000000000000 ]"
b0 \"
b101000000000000 W"
b110000000000000 V"
b110000000000000000000000000 U"
b11000000000000 T"
b10000000000000 S"
b1 R"
0Q"
b110000000000000 P"
b110000000000000 O"
b10000000000000 N"
b10000000000000 M"
b11000000000000 L"
b0 K"
b101000000000000 F"
b110000000000000 E"
b110000000000000000000000000 D"
b11000000000000 C"
b10000000000000 B"
b1 A"
0@"
b110000000000000 ?"
b110000000000000 >"
b10000000000000 ="
b10000000000000 <"
b11000000000000 ;"
b0 :"
b101000000000000 5"
b110000000000000 4"
b110000000000000000000000000 3"
b11000000000000 2"
b10000000000000 1"
b1 0"
0/"
b110000000000000 ."
b110000000000000 -"
b10000000000000 ,"
b10000000000000 +"
b11000000000000 *"
b0 )"
b101000000000000 $"
b110000000000000 #"
b110000000000000000000000000 ""
b11000000000000 !"
b10000000000000 ~
b1 }
0|
b110000000000000 {
b110000000000000 z
b10000000000000 y
b10000000000000 x
b11000000000000 w
b0 v
b101000000000000 q
b110000000000000 p
b110000000000000000000000000 o
b11000000000000 n
b10000000000000 m
b1 l
0k
b110000000000000 j
b110000000000000 i
b10000000000000 h
b10000000000000 g
b11000000000000 f
1c
1b
1a
1`
1_
1^
1]
1\
1[
b110000000000000 Z
b110000000000000 Y
b110000000000000 X
b110000000000000 W
b110000000000000 V
b110000000000000 U
b110000000000000 T
b110000000000000 S
b110000000000000 R
b10000000000000 Q
b10000000000000 P
b10000000000000 O
b10000000000000 N
b10000000000000 M
b10000000000000 L
b10000000000000 K
b10000000000000 J
b10000000000000 I
b11000000000000 H
b11000000000000 G
b11000000000000 F
b11000000000000 E
b11000000000000 D
b11000000000000 C
b11000000000000 B
b11000000000000 A
b11000000000000 @
1?
1>
b10000000000000 =
b10000000000000 <
b10000000000000 ;
b10000000000000 :
b10000000000000 9
b10000000000000 8
b10000000000000 7
b10000000000000 6
b10000000000000 5
b11000000000000 4
b11000000000000 3
b11000000000000 2
b11000000000000 1
b11000000000000 0
b11000000000000 /
b11000000000000 .
b11000000000000 -
b11000000000000 ,
1*
b110000000000000 )
b110000000000000 (
b110000000000000 '
b110000000000000 &
b110000000000000 %
b110000000000000 $
b110000000000000 #
b110000000000000 "
b110000000000000 !
$end
#5000
0?
0>
#10000
b10000000000000 !
b10000000000000 R
b10000000000000 6#
b10000000000000 "
b10000000000000 S
b10000000000000 %#
b10000000000000 #
b10000000000000 T
b10000000000000 r"
b10000000000000 $
b10000000000000 U
b10000000000000 a"
b10000000000000 %
b10000000000000 V
b10000000000000 P"
b10000000000000 &
b10000000000000 W
b10000000000000 ?"
b10000000000000 '
b10000000000000 X
b10000000000000 ."
b10000000000000 (
b10000000000000 Y
b10000000000000 {
b10000000000000 )
b10000000000000 Z
b10000000000000 j
b110000000000000 4#
b110000000000000 ##
b110000000000000 p"
b110000000000000 _"
b110000000000000 N"
b110000000000000 ="
b110000000000000 ,"
b110000000000000 y
b110000000000000 h
b10000000000000 5#
b10000000000000 $#
b10000000000000 q"
b10000000000000 `"
b10000000000000 O"
b10000000000000 >"
b10000000000000 -"
b10000000000000 z
b10000000000000 i
b10000000000000000000000000 ;#
b10000000000000000000000000 *#
b10000000000000000000000000 w"
b10000000000000000000000000 f"
b10000000000000000000000000 U"
b10000000000000000000000000 D"
b10000000000000000000000000 3"
b10000000000000000000000000 ""
b10000000000000000000000000 o
b111000000000000 =#
b1000000000000 :#
b111000000000000 ,#
b1000000000000 )#
b111000000000000 y"
b1000000000000 v"
b111000000000000 h"
b1000000000000 e"
b111000000000000 W"
b1000000000000 T"
b111000000000000 F"
b1000000000000 C"
b111000000000000 5"
b1000000000000 2"
b111000000000000 $"
b1000000000000 !"
b111000000000000 q
b1000000000000 n
b1000000000000 4
b1000000000000 H
b1000000000000 2#
b1000000000000 3
b1000000000000 G
b1000000000000 !#
b1000000000000 2
b1000000000000 F
b1000000000000 n"
b1000000000000 1
b1000000000000 E
b1000000000000 ]"
b1000000000000 0
b1000000000000 D
b1000000000000 L"
b1000000000000 /
b1000000000000 C
b1000000000000 ;"
b1000000000000 .
b1000000000000 B
b1000000000000 *"
b1000000000000 -
b1000000000000 A
b1000000000000 w
b1000000000000 ,
b1000000000000 @
b1000000000000 f
1?
1>
#15000
0>
#20000
0*
0c
0b
0a
0`
0_
0^
0]
0\
0[
b1 v
b1 )"
b1 :"
b1 K"
b1 \"
b1 m"
b1 ~"
b1 1#
b1 B#
1>
0?
#25000
0>
#30000
1>
