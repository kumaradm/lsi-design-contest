$date
	Mon Dec 02 10:45:27 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_multiplier_fixed_point_16_bit $end
$var wire 16 ! y [15:0] $end
$var wire 1 " of $end
$var parameter 32 # N $end
$var parameter 32 $ Q $end
$var reg 16 % x1 [15:0] $end
$var reg 16 & x2 [15:0] $end
$scope module comp1 $end
$var wire 16 ' a [15:0] $end
$var wire 16 ( b [15:0] $end
$var wire 15 ) quantized_result_2cmp [14:0] $end
$var wire 15 * quantized_result [14:0] $end
$var wire 16 + q_result [15:0] $end
$var wire 1 " overflow $end
$var wire 16 , multiplier [15:0] $end
$var wire 16 - multiplicand [15:0] $end
$var wire 32 . f_result [31:0] $end
$var wire 16 / b_2cmp [15:0] $end
$var wire 16 0 a_2cmp [15:0] $end
$var parameter 32 1 N $end
$var parameter 32 2 Q $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b1100 2
b10000 1
b1100 $
b10000 #
$end
#0
$dumpvars
b111000000000000 0
b111000000000000 /
b1000000000000000000000000 .
b1000000000000 -
b1000000000000 ,
b1000000000000 +
b1000000000000 *
b111000000000000 )
b1000000000000 (
b1000000000000 '
b1000000000000 &
b1000000000000 %
0"
b1000000000000 !
$end
#10
